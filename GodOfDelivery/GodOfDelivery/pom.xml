<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.kh</groupId>
   <artifactId>god</artifactId>
   <name>GodOfDelivery</name>
   <packaging>war</packaging>
   <version>1.0.0-BUILD-SNAPSHOT</version>
   
   <!-- 버젼정보를 태그명으로 저장해서 다른 소스에서 참조함-->
   <properties>
      <!-- 자바 버젼을 1.8로 수정 -->
      <java-version>1.8</java-version>
      <!-- 5.0.6.RELEASE 수정  -->
      <org.springframework-version>5.0.6.RELEASE</org.springframework-version>
      <org.aspectj-version>1.6.10</org.aspectj-version>
      <org.slf4j-version>1.6.6</org.slf4j-version>
   </properties>
   
   <!-- #1.1 사설저장소 등록 -->
      <repositories>
         <repository>
            <id>datanucleus-repo</id>
            <url>http://www.datanucleus.org/downloads/maven2/</url>
         </repository>
         
         <repository>
		    <id>jitpack.io</id>
		    <url>https://jitpack.io</url>
		</repository>
      </repositories>
   
   
   <dependencies>
      <!-- Spring -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${org.springframework-version}</version>
         <exclusions>
            <!-- Exclude Commons Logging in favor of SLF4j -->
            <exclusion>
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
             </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>
            
      <!-- AspectJ -->
      <dependency>
         <groupId>org.aspectj</groupId>
         <artifactId>aspectjrt</artifactId>
         <version>${org.aspectj-version}</version>
      </dependency>   
      
         <!-- 2019.01.30 -->
      <!-- #9. aop처리를 위한 aspectjweaver 추가하기 -->
    <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${org.aspectj-version}</version>
    </dependency>
      
      <!-- Logging -->
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${org.slf4j-version}</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${org.slf4j-version}</version>
         <scope>runtime</scope>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
         <version>${org.slf4j-version}</version>
         <scope>runtime</scope>
      </dependency>
      <!--slf4j 는 log4j 상위 개념 
      스프링특징  pojo , psa 
      야구게임을 하는데 투수 포지션에 누구든지 올 수 있다. 하지만, 투수라는 상위 개념이 있다. ? 뭐래 
      logging에 쓸 수 있는 프레임워크가 있는데 조금씩 사용법이 달라서 이거에 대해서 상위개념에서 프로그램을 다룰 수 있게 한게 slf4j 
      추상화된 레이어 : 상위 개념에서 다룰 수 있다.   
      log4j만의 기능들을 모두 다 다룰 수 있는것은 아니다. 공통적인것은 다루되 나머지를 다 다룰 수 있는 것은 아니다.-->
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
         <version>1.2.15</version>
         <exclusions>
            <exclusion>
               <groupId>javax.mail</groupId>
               <artifactId>mail</artifactId>
            </exclusion>
            <exclusion>
               <groupId>javax.jms</groupId>
               <artifactId>jms</artifactId>
            </exclusion>
            <exclusion>
               <groupId>com.sun.jdmk</groupId>
               <artifactId>jmxtools</artifactId>
            </exclusion>
            <exclusion>
               <groupId>com.sun.jmx</groupId>
               <artifactId>jmxri</artifactId>
            </exclusion>
         </exclusions>
         <!-- runtime 날림 : compile시 돌아가게 된다.
         기본값 : compile
         runtime이 있으며 runtime시 사용하게 된다.-->
      </dependency>

      <!-- @Inject -->
      <dependency>
         <groupId>javax.inject</groupId>
         <artifactId>javax.inject</artifactId>
         <version>1</version>
      </dependency>
            
      <!-- Servlet -->
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.1.0</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet.jsp</groupId>
         <artifactId>jsp-api</artifactId>
         <version>2.1</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>jstl</artifactId>
         <version>1.2</version>
      </dependency>
   
      <!-- Test -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.7</version>
         <scope>test</scope>
      </dependency> 
      
      <!-- #1. Database 연결관련  -->
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis</artifactId>
         <version>3.4.6</version>
      </dependency>
      <dependency>
         <groupId>org.mybatis</groupId>
         <artifactId>mybatis-spring</artifactId>
         <version>1.3.2</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-jdbc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>
      <!-- Database Connection Pool -->
      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <version>1.4</version>
      </dependency>
      <!-- 사설저장소 사용 (저장소 등록해야함): https://mvnrepository.com/artifact/oracle/ojdbc6  -->
      <dependency>
         <groupId>oracle</groupId>
         <artifactId>ojdbc6</artifactId>
         <version>11.2.0.3</version>
      </dependency>
      
      <!--  -->
      <!-- https://mvnrepository.com/artifact/org.springframework/springloaded -->
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>springloaded</artifactId>
        <version>1.2.8.RELEASE</version>
        <scope>provided</scope>
    </dependency>

      <!-- #7. 스프링  security 프레임워크 의존 -->
      <!-- version : org.springframework-version로 바뀜 -->
      <!--version 상응하는 버젼이 안되는 경우 직접 있는 버전을 명시  5.0.11.RELEASE -->
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
         <version>5.0.11.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-web</artifactId>
         <version>5.0.11.RELEASE</version>
      </dependency>
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
         <version>5.0.11.RELEASE</version>
      </dependency>
      
      <!-- query와 resultSet을 logging할 수 있는 log4jdbc-remix 라이브러리추가 -->
      <!-- https://mvnrepository.com/artifact/org.lazyluke/log4jdbc-remix/0.2.7 -->
      <dependency>
         <groupId>org.lazyluke</groupId>
         <artifactId>log4jdbc-remix</artifactId>
         <version>0.2.7</version>
      </dependency>
      
      <!-- 2019.02.01 -->
      <!-- #10. FileUpload용 라이브러리 추가 -->
    <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.6</version>
    </dependency>
    <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.3.3</version>
    </dependency>
    
    <!-- #12. jsonView 관련 의존 -->
    <dependency>
        <groupId>net.sf.json-lib</groupId>
        <artifactId>json-lib-ext-spring</artifactId>
        <version>1.0.2</version>
    </dependency>
    <!-- #13. @Responsebody사용을 위한 의존 : 자바객체->json -->
    <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.9.5</version>
    </dependency>
    
    <!-- lombok추가!!!! -->
    <dependency>
    	<groupId>org.projectlombok</groupId>
    	<artifactId>lombok</artifactId>
    	<version>1.18.4</version>
    	<scope>provided</scope>
    </dependency>
    
    <!-- selenium 설치 -->
    <dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>3.3.1</version>
	</dependency>

	
	<dependency>
	    <groupId>net.nurigo</groupId>
	    <artifactId>javaSDK</artifactId>
	    <version>2.2</version>
	</dependency>
             

     
       <!-- 웹 소켓 통신을 위한 의존 2개 -->
       <!-- WebSocket -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
        <dependency>
        	<groupId>javax.websocket</groupId>
        	<artifactId>javax.websocket-api</artifactId>
        	<version>1.1</version>
        </dependency>
		<!-- Jackson 웹 소켓 데이터 내부 통신은 JSON으로 통신하므로 jackson라이브러리도 추가함. GSON으로 변환할예정-->
		<dependency>
			<groupId>com.google.code.gson</groupId>
	 		<artifactId>gson</artifactId>
	 		<version>2.8.0</version>
		</dependency>
		
		<!-- 결제취소를 위한 api -->
	 <dependency>
		    <groupId>com.github.iamport</groupId>
		    <artifactId>iamport-rest-client-java-hc</artifactId>
		    <version>0.0.2</version>
		</dependency>
		
		<!-- Java Mail API -->
		<dependency> 
			<groupId>org.springframework</groupId> 
			<artifactId>spring-context-support</artifactId> 
			<version>${org.springframework-version}</version> 
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		
		<!-- Stomp 관련 의존 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-messaging</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
   </dependencies>
   
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- 2019.01.30 -->
                <version>2.5.1</version>
                <configuration>
                <!--java 1.8로 수정 :source , target도 버전 맞쳐줌. propertise facset에서 java 1.8로 수정-->
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>