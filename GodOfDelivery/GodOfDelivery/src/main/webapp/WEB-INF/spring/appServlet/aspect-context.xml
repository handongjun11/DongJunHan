<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- #9.2 aop 관련태그 작성 -->
	
	<!-- 선언적 aop 시작 -->
	
	<!-- LoggerAspect 빈등록  -->
	<!--
	<bean id="loggerAspect" class="com.kh.spring.common.aop.LoggerAspect"/> 
	<aop:config>
		<aop:aspect id="loggerAspect" ref="loggerAspect"> ref : 실제 존재하는 빈을 등록
			<aop:pointcut expression="execution(* com.kh.spring.memo..*(..))" id="pointCutForAll"/> 
			expression : 조인 선정물  (괄호안에 경로가 오타있을경우 에러가 나는게 아니라 아예 해당 경로를 들르지 않음. 주소에 에러없는지 자세히 보기)
			(* com.kh.spring.memo..MemoController.memo(..)) : memo 패키지의 MemoController클래스의 안에 있는 memo 메소드, 어떤 파라미터든(없는경우도포함)
				 (* com.kh.spring.memo..*(..)) : memo 패키지의 모든 클래스의 모든 메소드의 모든 파라미터
						
			<aop:around method="loggerAdvice" pointcut-ref="pointCutForAll"/> pointcut-ref = aop:pointcut 태그의 아이디값! 						  				
		</aop:aspect>
	</aop:config> 
	-->
	
	<!-- 선언적 aop 끝 -->
	
	
	<!-- 프로그래밍 적 aop 시작 -->
	<aop:aspectj-autoproxy/>
	<!-- 프로그래밍 적 aop 끝 -->
	
	<!-- #11.2 트랜잭션 처리를 위해서 특정클래스/특정메소드를 aop pointcut으로 등록함 -->
<!-- 
	<aop:config>
	  <aop:pointcut id="serviceMethod" expression="execution(* com.kh.spring..*ServiceImpl.*(..))" />
    </aop:config> 
-->

</beans>





























