/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-03-01 09:43:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1548321130691L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_fmt_005frequestEncoding_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("div#MemberEnroll-container{\r\n");
      out.write("    margin: 150px auto 0;\r\n");
      out.write("\twidth : 800px;\r\n");
      out.write("\ttext-align : center;\r\n");
      out.write("}\r\n");
      out.write("div.form-group label{ padding-top : 0.5em; text-align: left;}\r\n");
      out.write("div.form-group input{\r\n");
      out.write("\twidth : 280px;\r\n");
      out.write("}\r\n");
      out.write("div#inputProfile{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    z-index: 1;       \r\n");
      out.write("    left: 69%;\r\n");
      out.write("    top: 244px;\r\n");
      out.write("}\r\n");
      out.write(".imgProfile-wrapper{\r\n");
      out.write("\twidth: 150px;\r\n");
      out.write("    height : 150px;\r\n");
      out.write("    padding: 3px;\r\n");
      out.write("    border: 1px solid #ced4da;\r\n");
      out.write("}\r\n");
      out.write(".profile{\r\n");
      out.write("\tbackground-image: url(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/outbox.png\");\r\n");
      out.write("\tbackground-repeat: no-repeat;\r\n");
      out.write("\tbackground-position: center;\r\n");
      out.write("\tborder : 1px solid #ced4da;\r\n");
      out.write("\twidth : 120px;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("\tmargin-top: 8px;\r\n");
      out.write("}\r\n");
      out.write("input#inputProfileFile{opacity: 0;}\r\n");
      out.write("input#gender1, input#gender2{width : 30px;}\r\n");
      out.write("input#gender2 {margin-left:50px;}\r\n");
      out.write("select#selectYear{ width : 100px;}\r\n");
      out.write("select#selectMonth, select#selectDay{ width : 65px;}\r\n");
      out.write(".checkFavorite{width:30px !important}\r\n");
      out.write("</style>\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("<div id=\"MemberEnroll-container\">\r\n");
      out.write("\t<h2>개인 회원 가입</h2>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<hr />\t\r\n");
      out.write("\t<br />\r\n");
      out.write("\t\r\n");
      out.write("\t<form name=\"memberEnrollFrm\" \r\n");
      out.write("\t\t  action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberEnrollEnd.do\" \r\n");
      out.write("\t\t  method=\"post\" \r\n");
      out.write("\t\t  onsubmit=\"return validate();\" \r\n");
      out.write("\t\t  enctype=\"multipart/form-data\">\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- 프로필 사진 -->\r\n");
      out.write("\t\t<div id=inputProfile>\t\r\n");
      out.write("\t\t\t<div class=\"imgProfile-wrapper\">\r\n");
      out.write("\t\t\t\t<img id=\"imgProfile\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/avatar.png\" style=\"width:100%; height:100%\">\t\t\t\t\r\n");
      out.write("  \t\t\t</div>\r\n");
      out.write("  \t\t\t<div class=\"profile custom-file\">\r\n");
      out.write("    \t\t\t<input type=\"file\" id=\"inputProfileFile\" name=\"upFile\">\t\t\r\n");
      out.write("  \t\t\t</div>\t\t\t\t\r\n");
      out.write("\t\t</div>\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 아이디 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputMemberId\" class=\"col-sm-3\">아이디<span style=\"color:red;\">&nbsp;*</span></label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputMemberId\" name=\"memberId\" required>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\t\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<!-- 비밀번호 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputPassword\" class=\"col-sm-3\">비밀번호<span style=\"color:red;\">&nbsp;*</span></label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPassword\" name = \"password\" required>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"checkPassword\" class=\"col-sm-3\">비밀번호 확인<span style=\"color:red;\">&nbsp;*</span></label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"password\" class=\"form-control\" id=\"checkPassword\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 이름 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputMemberName\" class=\"col-sm-3\">이름<span style=\"color:red;\">&nbsp;*</span></label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputMemberName\" name=\"memberName\" required>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\t\t\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<!-- 생년월일 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"birth\" />\r\n");
      out.write("\t\t\t<label for=\"selectBirth\" class=\"col-sm-3\">생년월일</label>\t\r\n");
      out.write("\t\t\t<select class=\"form-control selectBirth\" id=\"selectYear\">  \r\n");
      out.write("  \t\t\t\t<option selected=\"selected\" disabled=\"disabled\">년</option>\r\n");
      out.write("  \t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t<select class=\"form-control selectBirth\" id=\"selectMonth\"> \r\n");
      out.write("  \t\t\t\t<option selected=\"selected\" disabled=\"disabled\">월</option>\r\n");
      out.write("  \t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t<select class=\"form-control selectBirth\" id=\"selectDay\"> \r\n");
      out.write("  \t\t\t\t<option selected=\"selected\" disabled=\"disabled\">일</option>\r\n");
      out.write("  \t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 성별 -->\r\n");
      out.write("  \t\t<div class=\"form-group row\">\r\n");
      out.write("  \t\t\t<input type=\"hidden\" name=\"gender\"/>\r\n");
      out.write("  \t\t\t\r\n");
      out.write("\t  \t\t<label for=\"checkGender\" class=\"col-sm-3\">성별</label>\r\n");
      out.write("\t  \t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t  \t\t\t<input class=\"form-check-input\" type=\"radio\" id=\"gender1\" value=\"M\" name=\"genderCheck\">\r\n");
      out.write("\t  \t\t\t<label class=\"form-check-label col-form-label\" for=\"gender1\">남자</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t  \t\t\t<input class=\"form-check-input\" type=\"radio\" id=\"gender2\" value=\"F\" name=\"genderCheck\" checked>\r\n");
      out.write("\t  \t\t\t<label class=\"form-check-label col-form-label\" for=\"gender2\">여자</label>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 이메일 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"email\" />\r\n");
      out.write("    \t\t<label for=\"inputEmail\" class=\"col-sm-3\">이메일<span style=\"color:red;\">&nbsp;*</span></label>\r\n");
      out.write("    \t\t<div class=\"form-inline\">\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputEmailAddress1\">\r\n");
      out.write("      \t\t\t&nbsp;@&nbsp;\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputEmailAddress2\" >\r\n");
      out.write("      \t\t\t&nbsp;\r\n");
      out.write("      \t\t\t<select class=\"form-control\" id=\"selectEmailAddress\" >\r\n");
      out.write("      \t\t\t\t <option value=\"\">선택하세요</option>\r\n");
      out.write("      \t\t\t\t <option value=\"naver.com\">naver.com</option>\r\n");
      out.write("                     <option value=\"hanmail.net\">hanmail.net</option>\r\n");
      out.write("                     <option value=\"nate.com\">nate.com</option>\r\n");
      out.write("                     <option value=\"daum.net\">daum.net</option>\r\n");
      out.write("                     <option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("                     <option value=\"etc\">직접입력</option>\r\n");
      out.write("      \t\t\t</select> \r\n");
      out.write("      \t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- 핸드폰 번호 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"phone\" />\r\n");
      out.write("\t\t\t<label for=\"phone1\" class=\"col-sm-3\">핸드폰 번호<span style=\"color:red;\">&nbsp;*</span></label>\t\r\n");
      out.write("\t\t\t<div class=\"form-inline\">\r\n");
      out.write("\t\t\t\t<select class=\"form-control selectPhone\" id=\"phone1\"> \r\n");
      out.write("\t  \t\t\t\t<option selected=\"selected\">010</option>\r\n");
      out.write("\t  \t\t\t\t<option>019</option>\r\n");
      out.write("\t  \t\t\t\t<option>016</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t\t<input class=\"form-control selectPhone\" type=\"text\" id=\"phone2\" required\r\n");
      out.write("\t\t\t\t\t   maxlength=\"4\" style=\"width: 80px;\" onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"/>  \r\n");
      out.write("\t\t\t\t&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t\t<input class=\"form-control selectPhone\" type=\"text\" id=\"phone3\" required\r\n");
      out.write("\t\t\t\t\t   maxlength=\"4\" style=\"width: 80px;\" onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 주소 api -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<label for=\"address\" class=\"col-sm-3\">주소<span style=\"color:red;\">&nbsp;*</span></label>\t\r\n");
      out.write("\t\t\t<input class =\"form-control\" type=\"text\" name=\"address\" id=\"address\" onclick=\"execDaumPostcode();\"/>\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 취향 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<label class=\"col-sm-3\">취향</label>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-inline\">\t\t\t\t\t\t  \t\t\t\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite0\" value=\"1\"><label for=\"favorite0\" class=\"form-check-label col-form-label\">치킨</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite1\" value=\"2\"><label for=\"favorite1\" class=\"form-check-label col-form-label\">피자</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite2\" value=\"3\"><label for=\"favorite2\" class=\"form-check-label col-form-label\">족발/보쌈</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite3\" value=\"4\"><label for=\"favorite3\" class=\"form-check-label col-form-label\">분식</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite4\" value=\"5\"><label for=\"favorite4\" class=\"form-check-label col-form-label\">중식</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite4\" value=\"6\"><label for=\"favorite4\" class=\"form-check-label col-form-label\">일식</label>&nbsp;\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" class=\"form-check-input checkFavorite\" name=\"favorite\" id=\"favorite4\" value=\"7\"><label for=\"favorite4\" class=\"form-check-label col-form-label\">한식</label>&nbsp;\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"submit\" class=\"btn btn-outline-success\" value=\"가입하기\" >\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("/* 유효성 검사 */\r\n");
      out.write("function validate(){ \r\n");
      out.write("\t\r\n");
      out.write("\t//아이디 글자수 확인\r\n");
      out.write("\tif($(\"#inputMemberId\").val().trim().length < 4){\r\n");
      out.write("\t      alert(\"아이디는 4글자 이상 입력해주세요\");\r\n");
      out.write("\t      return false;\t      \r\n");
      out.write(" \t}\r\n");
      out.write(" \t\r\n");
      out.write(" \t//비밀번호 일치 여부 검사\r\n");
      out.write("\tif($(\"#inputPassword\").val() != $(\"#checkPassword\").val()){\r\n");
      out.write("\t      alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("\t      return false;\r\n");
      out.write("\t}\r\n");
      out.write(" \t\r\n");
      out.write(" \t/*생년월일 처리*/\r\n");
      out.write(" \tvar birth = null;\r\n");
      out.write(" \tif($('#selectYear').val() != null && $('#selectMonth').val() != null && $('#selectDay').val() != null){\r\n");
      out.write(" \t\tvar year = $('#selectYear').val();\r\n");
      out.write(" \t\tvar month =  $('#selectMonth').val();\r\n");
      out.write(" \t\tvar day = $('#selectDay').val();\r\n");
      out.write(" \t\t\t\r\n");
      out.write(" \t\tif($('#selectMonth').val().length == 1){\r\n");
      out.write(" \t\t\tmonth = '0'+$('#selectMonth').val();\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\tif($('#selectDay').val().length == 1){\r\n");
      out.write(" \t\t\tday = '0'+$('#selectDay').val();\r\n");
      out.write(" \t\t}\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t  \tbirth = year + month + day; \t  \r\n");
      out.write(" \t  \t$('[name=\"birth\"]').val(birth);\t \r\n");
      out.write(" \t}\r\n");
      out.write(" \t\r\n");
      out.write(" \t/*성별 처리*/\r\n");
      out.write(" \t$(\"input[name=gender]\").val($(\"input[name=genderCheck]:checked\").val());\r\n");
      out.write(" \t\r\n");
      out.write(" \t/*이메일 처리*/\r\n");
      out.write(" \t$(\"input[name=email]\").val($('#inputEmailAddress1').val()+'@'+$('#inputEmailAddress2').val());\r\n");
      out.write(" \t\r\n");
      out.write(" \t/*핸드폰 번호 처리*/\r\n");
      out.write("\t$(\"input[name=phone]\").val($('#phone1').val()+\"-\"+$('#phone2').val()+\"-\"+$('#phone3').val());\r\n");
      out.write(" \t\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 이미지 파일 첨부시 미리보기 */\r\n");
      out.write("function readURL(input) {\r\n");
      out.write(" \r\n");
      out.write("    if (input.files && input.files[0]) {\r\n");
      out.write("        var reader = new FileReader();\r\n");
      out.write(" \r\n");
      out.write("        reader.onload = function (e) {\r\n");
      out.write("            $('#imgProfile').attr('src', e.target.result);\r\n");
      out.write("        }\r\n");
      out.write(" \r\n");
      out.write("        reader.readAsDataURL(input.files[0]);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" /*이미지파일 미리보기 URL 넣기*/\r\n");
      out.write("$(\"#inputProfileFile\").change(function(){\r\n");
      out.write("    readURL(this);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/* select창에서 선택한 이메일 주소를 input이메일주소창으로 넣어주기 */\r\n");
      out.write("$(\"#selectEmailAddress\").on(\"change\",function(){\r\n");
      out.write("\t$('#inputEmailAddress2').val($('#selectEmailAddress').val());\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/* input이메일 주소창에 수정이 있으면 select이메일 창의 값을 직접입력으로 변경 */\r\n");
      out.write("$(\"#inputEmailAddress2\").on(\"focus\",function(){\r\n");
      out.write("\t$('#selectEmailAddress').val('etc');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*다음 주소 API 관련 함수*/\r\n");
      out.write("function execDaumPostcode(){\t\r\n");
      out.write("    var popUpAddress = \r\n");
      out.write("\tnew daum.Postcode({\r\n");
      out.write("\t    oncomplete:function(data){\r\n");
      out.write("\t         var fullRoadAddr = data.roadAddress;\r\n");
      out.write("\t         var extraRoadAddr = '';\r\n");
      out.write("\t         \r\n");
      out.write("\t         if(data.bname !=='' &&/[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("\t            extraRoadAddr += data.bname;\r\n");
      out.write("\t         }\r\n");
      out.write("\t         if(data.buildingName !=='' &&data.apartment === 'Y'){\r\n");
      out.write("\t            extraRoadAddr += (extraRoadAddr !== ''?','+data.buildingName : data.build);\r\n");
      out.write("\t         }\r\n");
      out.write("\t         if(extraRoadAddr !== ''){\r\n");
      out.write("\t            extraRoadAddr = '(' + extraRoadAddr +')';\r\n");
      out.write("\t         }\r\n");
      out.write("\t         if(fullRoadAddr !== ''){\r\n");
      out.write("\t            fullRoadAddr += extraRoadAddr;\r\n");
      out.write("\t         }\r\n");
      out.write("\t         document.getElementById(\"address\").value = fullRoadAddr;\r\n");
      out.write("\t     }\r\n");
      out.write("   \t}).open({\r\n");
      out.write("   \t    popupName: 'postcodePopup' //팝업 이름을 설정(영문,한글,숫자 모두 가능, 영문 추천)\r\n");
      out.write("   \t});\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write('	');
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005frequestEncoding_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:requestEncoding
    org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag _jspx_th_fmt_005frequestEncoding_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag) _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag.class);
    boolean _jspx_th_fmt_005frequestEncoding_005f0_reused = false;
    try {
      _jspx_th_fmt_005frequestEncoding_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005frequestEncoding_005f0.setParent(null);
      // /WEB-INF/views/member/memberEnroll.jsp(7,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005frequestEncoding_005f0.setValue("UTF-8");
      int _jspx_eval_fmt_005frequestEncoding_005f0 = _jspx_th_fmt_005frequestEncoding_005f0.doStartTag();
      if (_jspx_th_fmt_005frequestEncoding_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005frequestEncoding_005f0);
      _jspx_th_fmt_005frequestEncoding_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005frequestEncoding_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005frequestEncoding_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/member/memberEnroll.jsp(112,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("year");
      // /WEB-INF/views/member/memberEnroll.jsp(112,6) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(1935);
      // /WEB-INF/views/member/memberEnroll.jsp(112,6) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(2004);
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("  \t\t\t\t\t<option>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${year }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("  \t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/member/memberEnroll.jsp(119,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("month");
      // /WEB-INF/views/member/memberEnroll.jsp(119,6) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setBegin(1);
      // /WEB-INF/views/member/memberEnroll.jsp(119,6) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setEnd(12);
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("  \t\t\t\t\t<option>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${month }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("  \t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/views/member/memberEnroll.jsp(126,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("day");
      // /WEB-INF/views/member/memberEnroll.jsp(126,6) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setBegin(1);
      // /WEB-INF/views/member/memberEnroll.jsp(126,6) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setEnd(31);
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("  \t\t\t\t\t<option>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${day }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("  \t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }
}
