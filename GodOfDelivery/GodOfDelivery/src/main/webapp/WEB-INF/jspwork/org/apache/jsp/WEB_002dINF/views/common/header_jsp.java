/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-03-10 16:00:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.god.seller.model.vo.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1548321130691L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.kh.god.seller.model.vo");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	if(session.getAttribute("sellerLoggedIn") != null){
		Seller sellerLoggedIn = (Seller)session.getAttribute("sellerLoggedIn");
	System.out.println("##################################" + sellerLoggedIn.getSellerId());		
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pageTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.3.0/sockjs.js\"></script>\r\n");
      out.write("<!-- 부트스트랩관련 라이브러리 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\" integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\" integrity=\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\" crossorigin=\"anonymous\"> \r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"이미지경로\" />\r\n");
      out.write("<!-- 구글 차트 API -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("<!-- 사용자작성 css -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/style.css\" />\r\n");
      out.write("\r\n");
      out.write("<!-- 주소api -->\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script> \r\n");
      out.write("\r\n");
      out.write("<!-- favicon 설정 -->\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("<!-- WebSocket: stomp.js CDN -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("nav.navbar-light{\r\n");
      out.write("\tbackground : #117a8b;\r\n");
      out.write("}\r\n");
      out.write(".navbar-light .navbar-brand{\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write(".navbar-light .navbar-nav .active>.nav-link{\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-btn{\r\n");
      out.write("\tbackground-color: #117a8b;\r\n");
      out.write("\tborder-color: white;\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write(".header-btn:hover {\r\n");
      out.write("    background-color: #117a8b;\r\n");
      out.write("    border-color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".navbar-expand-lg .btn-outline-success:hover {\r\n");
      out.write("\tbackground-color: #32aeb8;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#modal-checkbox{\r\n");
      out.write("\tpadding-right: 252px;\r\n");
      out.write("}\r\n");
      out.write("#modal-checkbox>span{\r\n");
      out.write("\tvisibility: hidden;\r\n");
      out.write("}\r\n");
      out.write(".loginbtn{\r\n");
      out.write("\tbackground : none;\r\n");
      out.write("\tborder : none;\r\n");
      out.write("}\r\n");
      out.write(".loginbtn:hover{\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write("#profileImage{\r\n");
      out.write("\tposition : relative;\r\n");
      out.write("\tbottom : 0.3em;\t\r\n");
      out.write("\tborder-radius : 0.25em;\r\n");
      out.write("}\r\n");
      out.write(" div#memberstatus{\r\n");
      out.write("\tposition : relative;\r\n");
      out.write("\tleft : 0.6em; \r\n");
      out.write("\tborder-radius : 100%;\r\n");
      out.write("\twidth : 1rem;\r\n");
      out.write("\theight : 1rem;\r\n");
      out.write("\tpadding : 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#communicateWith{\r\n");
      out.write("\tposition : relative;\r\n");
      out.write("\tleft : 9rem;\r\n");
      out.write("\tbottom : 1rem;\r\n");
      out.write("}\r\n");
      out.write("div#messagePreviewContent{\r\n");
      out.write("\toverflow : hidden;\r\n");
      out.write("\ttext-overflow : ellipsis;\r\n");
      out.write("\twhite-space:normal;\r\n");
      out.write("}\r\n");
      out.write("div#chatView{\r\n");
      out.write("\twidth : 98%;\r\n");
      out.write("\tmargin-left : 0.25em;\r\n");
      out.write("\toverflow: -moz-scrollbars-vertical;\r\n");
      out.write("\toverflow-x: hidden;\r\n");
      out.write("\toverflow-y: auto;\t\r\n");
      out.write("}\r\n");
      out.write("div#chatView div.messageFormatMyself{\r\n");
      out.write("\r\n");
      out.write("\tposition : relative;\r\n");
      out.write("\tleft : 9rem;\r\n");
      out.write("\twidth : 14rem;\r\n");
      out.write("\ttext-align : right;\r\n");
      out.write("\tborder : 1px solid lightgray;\r\n");
      out.write("\tborder-radius :1em;\r\n");
      out.write("\tmargin-top: 1rem;\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("div#chatView div.messageFormatHim{\r\n");
      out.write("\r\n");
      out.write("\twidth : 14rem;\r\n");
      out.write("\ttext-align : left;\r\n");
      out.write("\tborder : 1px solid lightgray;\r\n");
      out.write("\tborder-radius : 1em;\r\n");
      out.write("\tmargin-top: 1rem;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("div.dropdown-body{\r\n");
      out.write("\toverflow-y : auto;\r\n");
      out.write("\tmax-height : 10rem;\r\n");
      out.write("}\r\n");
      out.write("#alertsDropdownBox{\r\n");
      out.write("\toverflow-y : auto;\r\n");
      out.write("\tmax-height : 15rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#socketAlert{\r\n");
      out.write("\tdisplay : none;\r\n");
      out.write("\tz-index : 10;\r\n");
      out.write("}\r\n");
      out.write("div#messageContentShow{\r\n");
      out.write("\twhite-space : normal;\r\n");
      out.write("\tposition : relative;\r\n");
      out.write("}\r\n");
      out.write("div#createChatRoomHeader h5{\r\n");
      out.write("\tmargin : auto;\r\n");
      out.write("\tmargin-right : 1rem;\r\n");
      out.write("}\r\n");
      out.write("input#insertId{\r\n");
      out.write("\tfloat : left;\r\n");
      out.write("\twidth : 13rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#autoComplete{\r\n");
      out.write("\tmin-width: 160px;\r\n");
      out.write("\tborder : 1px solid gray;\r\n");
      out.write("\tdisplay : none;\r\n");
      out.write("\tpadding : 0;\r\n");
      out.write("\tmargin : 0;\t\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("div#autoComplete li{\r\n");
      out.write("\tpadding : 0 10px;\r\n");
      out.write("\tlist-style : none;\r\n");
      out.write("\tcursor : pointer;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("div#autoComplete li:hover{\r\n");
      out.write("\tbackground : lightseagreen;\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write("div#autoComplete li.selected{\r\n");
      out.write("\tbackground : lightseagreen;\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("}\r\n");
      out.write("span.srchVal{\r\n");
      out.write("\tcolor : red;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("#find-btn{\r\n");
      out.write("\tpadding: 0px;\r\n");
      out.write("    margin: 0px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    color: black;\r\n");
      out.write("}\r\n");
      out.write("#find-btn:hover{\r\n");
      out.write("\tbackground-color: none !important;\r\n");
      out.write("\tborder-color: none !important;\r\n");
      out.write("}\r\n");
      out.write("#find-id{\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("} \r\n");
      out.write("#find-pwd{\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("} \r\n");
      out.write("#find-pwd1{\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\t<!-- chatting modal -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"chatModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\" style=\"height : 40em; width : 25em;\" id=\"chatModalContent\">\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div><!-- end of chatting modal -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- create chatRoom modal -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"createChatRoom\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\" style=\"height : 19rem; width : 19rem;\" id=\"createChatRoomBody\">\r\n");
      out.write("\t    \t<div class=\"modal-header\" id=\"createChatRoomHeader\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" >채팅할 사람</h5>\t\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"padding : 0.1em;\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\"  id=\"addPersonForChat\">\r\n");
      out.write("\t\t\t<input type=\"text\" class=\"form-control\" name=\"searchPerson\" placeholder=\"추가할 아이디를 검색하세요.\" id=\"insertId\" autocomplete=\"off\" />\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-link\" id=\"addPersonForChatBtn\" data-toggle=\"modal\" data-target=\"#confirmModal\"><i class=\"fas fa-plus\"></i></button>\r\n");
      out.write("\t        <div style=\"overflow-y : auto;\" id=\"autoComplete\"></div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t      \t\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div><!-- end of create chatRoom -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- confirm modal -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"confirmModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\" style=\"height : 12rem; width : 20rem;\" id=\"confrimBody\">\r\n");
      out.write("\t    \t<div class=\"modal-header\" id=\"confrimHeader\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" >확인</h5>\t\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"padding : 0.1em;\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\"  id=\"confirmBody\">\r\n");
      out.write("\t\t\t<input type=\"text\" class=\"form-control\" name=\"confirmContent\"  readonly />\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-outline-success\" id=\"confirmOkBtn\"  onclick=\"confirmOrNot();\">확인</button>\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-outline-danger\" id=\"confirmCancleBtn\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t      \t</div>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div><!-- end of comfirm modal -->\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 알람 -->\r\n");
      out.write("<div id=\"socketAlert\" class=\"alert alert-success\" role=\"alert\" ></div>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("   <header>\r\n");
      out.write("\t\t<nav class=\"fixed-top navbar-expand-lg navbar-light\" style=\"z-index : 1;\">\r\n");
      out.write("\t\t  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t    <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t  </button>\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  <!-- //collapse navbar-collapse -->\r\n");
      out.write("\t\t  <div class=\"navbar-collapse collapse \" id=\"navbarTogglerDemo01\">\r\n");
      out.write("\t\t    <a class=\"navbar-brand\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">God of Delivery</a>\r\n");
      out.write("\t\t    <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n");
      out.write("\t\t      <li class=\"nav-item active\">\r\n");
      out.write("\t\t        <a class=\"nav-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" id=\"sweetHome\">Home <span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("\t\t      </li>\r\n");
      out.write("\t\t      <li class=\"nav-item\">\t\t\t\t    \r\n");
      out.write("\t\t        <a class=\"nav-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/qnaboard.do\">고객센터</a>\r\n");
      out.write("\t\t      </li>\t\t    \r\n");
      out.write("\t\t      <li class=\"nav-item\">\t\t\t\t    \r\n");
      out.write("\t\t        <a class=\"nav-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/webreview.do\">배달의신평가</a>\r\n");
      out.write("\t\t      </li>\t\t    \r\n");
      out.write("\t\t      ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t    </ul>\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t\t<!-- 회원 로그인,회원가입 버튼 -->\r\n");
      out.write("\t\t    ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- member 로그인후  -->\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- seller 로그인후  -->\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005fif_005f8(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t  </div> <!-- div#navbarTogglerDemo01 -->\r\n");
      out.write("\t    </nav>\r\n");
      out.write("  </header>\r\n");
      out.write("\r\n");
      out.write("<!-- </div> -->\r\n");
      out.write("\t\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("   \t<!-- 로그인모달 : https://getbootstrap.com/docs/4.1/components/modal/#live-demo -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"loginModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t    <!-- 1 -->\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"exampleModalLabel\">로그인</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <!--로그인폼 : https://getbootstrap.com/docs/4.1/components/forms/#overview -->\r\n");
      out.write("\t      <!-- 팝업창이 생겼을때 부모창 영역을 컨트롤할 수 없는 상태를 모달이라고 한다. 제어권이 팝업에 우선으로 부여된다. 그외의 팝업창은 nonemodal이라한다. -->\r\n");
      out.write("          <form id=\"loginFrm\" method=\"post\">\r\n");
      out.write("\t     <!-- 2 -->\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\t\t\t    <input type=\"text\" class=\"form-control\" name=\"memberId\" placeholder=\"아이디\" required>\r\n");
      out.write("\t\t\t    <br />\r\n");
      out.write("\t\t\t    <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"비밀번호\" required>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <!-- 3 -->\r\n");
      out.write("\t      \r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t      \t<div id=\"modal-checkbox\" style=\"padding-right :80px;     width: 602px;\">\r\n");
      out.write("\t      \t\t<input type=\"checkbox\" name=\"login\" value=\"mem\" onclick=\"NoMultiChk(this);\"/> &nbsp;회원\r\n");
      out.write("\t      \t\t<input type=\"checkbox\" name=\"login\" value=\"sell\" onclick=\"NoMultiChk(this);\"/> &nbsp;사장님\r\n");
      out.write("\t      \t\t<br />\r\n");
      out.write("\t      \t\t<input type=\"checkbox\" id=\"autologin\" value=\"no\" /> &nbsp;로그인 상태 유지\r\n");
      out.write("\t      \t\t \t<input type=\"hidden\" id=\"autologin1\" name=\"autologin\" value=\"no\"/>\r\n");
      out.write("\t      \t\t<span style=\"color:red;margin: -13px;\">&nbsp;회원유형을 체크하세요</span>\r\n");
      out.write("\t\t      \t<br />\r\n");
      out.write("\t      \t</div>\r\n");
      out.write("\t      \t<br />\r\n");
      out.write("\t      \t<br />\r\n");
      out.write("\t      \t<br />\r\n");
      out.write("\t      \t<!-- <input type=\"checkbox\" name=\"autoLogin\" /> -->\r\n");
      out.write("\t\t      \t<span id=\"find-id-pw\" style=\"width: 556px; cursor: pointer;\">\r\n");
      out.write("\t\t      \t\t\r\n");
      out.write("\t\t      \t\t\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-outline-info\"  data-toggle=\"modal\" data-target=\"#FindModal\" id=\"find-btn\" >아이디/비밀번호찾기</button>\r\n");
      out.write("\t\t      \t</span>\r\n");
      out.write("\t        <button type=\"button\" class=\"btn btn-outline-success\" onclick=\"check();\" >로그인</button>\r\n");
      out.write("\t     \r\n");
      out.write("\t      </div>\r\n");
      out.write("\t\t  </form>\r\n");
      out.write("\t<!-- \t  <div id=\"find\" style=\"text-align: center; border-color: black;\">\r\n");
      out.write("\t\t  \t\t\t<table>\r\n");
      out.write("\t\t  \t\t\t\t<tr colspan=\"2\">아이디 찾기</tr>\r\n");
      out.write("\t\t  \t\t\t\t<tr>\r\n");
      out.write("\t\t  \t\t\t\t\t<td><input type=\"email\" placeholder=\"이메일을 입력하세요\"/></td>\r\n");
      out.write("\t\t  \t\t\t\t\t<td><button  type=\"button\">찾기</button></td>\r\n");
      out.write("\t\t  \t\t\t\t</tr>\r\n");
      out.write("\t\t  \t\t\t\t<tr colspan=\"2\">비밀번호 찾기</tr>\r\n");
      out.write("\t\t  \t\t\t\t<tr>\r\n");
      out.write("\t\t  \t\t\t\t\t<td><input type=\"email\" placeholder=\"이메일을 입력하세요\"/></td>\r\n");
      out.write("\t\t  \t\t\t\t\t<td><button  type=\"button\">찾기</button></td>\r\n");
      out.write("\t\t  \t\t\t\t</tr>\r\n");
      out.write("\t\t  \t\t\t\t\r\n");
      out.write("\t\t  \t\t\t\t\r\n");
      out.write("\t\t  \t\t\t</table>\r\n");
      out.write("\t\t  \t\t\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t   -->\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"modal fade\" id=\"FindModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t    <div class=\"modal-content\">\r\n");
      out.write("\t      <div class=\"modal-header\">\r\n");
      out.write("\t        <h5 class=\"modal-title\" id=\"exampleModalLabel\">아이디/비밀번호 찾기</h5>\r\n");
      out.write("\t        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("\t          <span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t        </button>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-body\">\r\n");
      out.write("\t        \r\n");
      out.write("\t          <div class=\"form-group\">\r\n");
      out.write("\t            <label for=\"email\" class=\"col-form-label\">아이디 찾기</label>\r\n");
      out.write("\t            <input type=\"text\" class=\"form-control\" id=\"find-id\" name=\"email\" placeholder=\"등록했던 이메일을 입력해 주세요.\"/>\r\n");
      out.write("\t            <button class=\"btn btn-outline-success\" onclick=\"findId();\" style=\"margin-top: -7px;\"> 찾기</button>\r\n");
      out.write("\t          \r\n");
      out.write("\t          </div>\r\n");
      out.write("\t          <div class=\"form-group\">\r\n");
      out.write("\t              <label for=\"password\" class=\"col-form-label\">비밀번호찾기</label>\r\n");
      out.write("\t            <input type=\"text\" class=\"form-control\" id=\"find-pwd\" placeholder=\"아이디를 입력해주세요.\" name=\"id\"/>\r\n");
      out.write("\t            <input type=\"text\" class=\"form-control\" id=\"find-pwd1\" placeholder=\"핸드폰번호를 입력해주세요.\" name=\"phone\" />\r\n");
      out.write("\t            <button class=\"btn btn-outline-success\" style=\"margin-top: -7px;\" onclick=\"findPwd();\"> 찾기</button>\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t      <div class=\"modal-footer\">\r\n");
      out.write("\t        <!-- <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t        <button type=\"submit\" class=\"btn btn-primary\">수정</button> -->\r\n");
      out.write("\t      </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t  </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\tfunction memberLogOut(){\r\n");
      out.write("\t\tsessionStorage.clear();\r\n");
      out.write("\t\tlocation.href=\r\n");
      out.write("\t\t\t'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberLogout.do?memberId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction NoMultiChk(chk){\r\n");
      out.write("\t\tvar obj = document.getElementsByName(\"login\");\r\n");
      out.write("\t    for(var i=0; i<obj.length; i++){\r\n");
      out.write("\t        if(obj[i] != chk){\r\n");
      out.write("\t            obj[i].checked = false;\r\n");
      out.write("\t        }\r\n");
      out.write("\t    }\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction check(){\r\n");
      out.write("\t\t\r\n");
      out.write(" \t\tif($(\"#autoLogin :checked\")){\r\n");
      out.write("\t\t\t$(\"#autoLogin\").val(\"1\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#autoLogin\").val(\"\");\r\n");
      out.write("\t\t}  \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar chk = $(\"[name='login']:checked\").val();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(chk == undefined) {\r\n");
      out.write("\t\t\t$(\"#modal-checkbox>span\").css(\"visibility\", \"visible\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(chk === \"mem\"){\r\n");
      out.write("\t\t\t$(\"#loginFrm\").attr(\"action\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/memberLogin.do\" );\r\n");
      out.write("\t\t\t$(\"#loginFrm\").submit();\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#loginFrm\").attr(\"action\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/sellerLogin.do\" );\r\n");
      out.write("\t\t\t$(\"#loginFrm\").submit();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t//알람 목록 가져오기\r\n");
      out.write("\t$(\"#alertsDropdown\").on(\"click\",function(){\r\n");
      out.write("\t\tif($(\"#alertsDropdown\").attr('aria-expanded') === 'false'){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/getAlertList.do\",\r\n");
      out.write("\t\t\t\tdata : {\"userId\" : chattingId},\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\tif(chattingId == \"admin\"){\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"관리자!\");\r\n");
      out.write("\t\t\t\t\t\tvar alertHeader = $(\"<div><h6 class='dropdown-header'>Alerts Center</h6></div>\");\r\n");
      out.write("\t\t\t\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t\t\t\tvar alert = data[i];\r\n");
      out.write("\t\t\t\t\t\t\tvar alertBody = $(\"<div class='dropdown-item d-flex align-items-center' id='alertView'\"+i+\" style='cursor : pointer;'></div>\")\r\n");
      out.write("\t\t\t\t\t\t\tif(alert.TYPE === 'report'){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar type = $(\"<div class='mr-3'><div class='icon-circle bg-warning' style='width : 2rem; height : 2rem; border-radius:100%;'><i class='fas fa-exclamation-triangle text-white' style='position : relative; left : 0.5em; top : 0.2em;'></i></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar content = $(\"<div class='alertType' value=\"+alert.TYPE+\"><div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar alertData = \"<div class='small text-gray-500' >(\"+alert.STORENO+\")\"+alert.STORENAME+\"</div><span class='font-weight-bold'>신고가 접수 되었습니다!</span>\";\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent.append(alertData);\r\n");
      out.write("\t\t\t\t\t\t\t\ttype.append(content);\r\n");
      out.write("\t\t\t\t\t\t\t}else if(alert.TYPE === 'qna'){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar type = $(\"<div class='mr-3'><div class='icon-circle bg-primary' style='width : 2rem; height : 2rem; border-radius:100%;'><i class='fas fa-file-alt text-white' style='position : relative; left : 0.6em; top : 0.2em;'></i></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar content = $(\"<div class='alertType' value=\"+alert.TYPE+\"><div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar alertData = \"<div class='small text-gray-500' >(\"+alert.STORENO+\") 님께서 </div><span class='font-weight-bold'>\"+alert.STORENAME+\" 라는 제목의 문의를 주셨습니다.</span>\";\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent.append(alertData);\r\n");
      out.write("\t\t\t\t\t\t\t\ttype.append(content);\r\n");
      out.write("\t\t\t\t\t\t\t}else if(alert.TYPE === 'pms'){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar type = $(\"<div class='mr-3'><div class='icon-circle bg-success' style='width : 2rem; height : 2rem; border-radius:100%;'><i class='fas fa-donate text-white' style='position : relative; left : 0.5em; top : 0.2em;'></i></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar content = $(\"<div class='alertType' value=\"+alert.TYPE+\"><div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar alertData = \"<div class='small text-gray-500' >(\"+alert.STORENO+\")\"+alert.STORENAME+\"</div><span class='font-weight-bold'> 가게 신청이 들어왔습니다.</span>\";\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent.append(alertData);\r\n");
      out.write("\t\t\t\t\t\t\t\ttype.append(content);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\talertBody.append(type);\r\n");
      out.write("\t\t\t\t\t\t\talertHeader.append(alertBody);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t$(\"#alertsDropdownBox\").html(alertHeader);\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tconsole.log(\"판매자!\");\r\n");
      out.write("\t\t\t\t\t\tvar alertHeader = $(\"<div><h6 class='dropdown-header'>Alerts Center</h6></div>\");\r\n");
      out.write("\t\t\t\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t\t\t\tvar alert = data[i];\r\n");
      out.write("\t\t\t\t\t\t\tvar date = (alert.RDATE).substring(0,16);\r\n");
      out.write("\t\t\t\t\t\t\tvar alertBody = $(\"<div class='dropdown-item d-flex align-items-center' value=\"+alert.STORENO+\"  id='alertView'\"+i+\" style='cursor : pointer;'></div>\")\r\n");
      out.write("\t\t\t\t\t\t\tif(alert.TYPE === 'review'){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar type = $(\"<div class='mr-3'><div class='icon-circle bg-primary' style='width : 2rem; height : 2rem; border-radius:100%;'><i class='fas fa-file-alt text-white' style='position : relative; left : 0.6em; top : 0.2em;'></i></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar content = $(\"<div class='alertType' value=\"+alert.TYPE+\"><div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar alertData = \"<div class='small text-gray-500' >\"+date+\"  </div><span class='font-weight-bold'>\"+alert.WRITER+\"님 께서 \"+alert.TITLE+\"라는 제목의 리뷰를 남기셨습니다.</span>\";\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent.append(alertData);\r\n");
      out.write("\t\t\t\t\t\t\t\ttype.append(content);\r\n");
      out.write("\t\t\t\t\t\t\t}else if(alert.TYPE === 'order'){\r\n");
      out.write("\t\t\t\t\t\t\t\tvar type = $(\"<div class='mr-3'><div class='icon-circle bg-success' style='width : 2rem; height : 2rem; border-radius:100%;'><i class='fas fa-donate text-white' style='position : relative; left : 0.5em; top : 0.2em;'></i></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar content = $(\"<div class='alertType' value=\"+alert.TYPE+\"><div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\tvar alertData = \"<div class='small text-gray-500'>\"+date+\"</div><span class='font-weight-bold'> 주문이 들어왔습니다. </span>\";\r\n");
      out.write("\t\t\t\t\t\t\t\tcontent.append(alertData);\r\n");
      out.write("\t\t\t\t\t\t\t\ttype.append(content);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\talertBody.append(type);\r\n");
      out.write("\t\t\t\t\t\t\talertHeader.append(alertBody);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t$(\"#alertsDropdownBox\").html(alertHeader);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(jqxhr,textStatus,errorTrown){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"알람 목록 가져오는중 에러 남!\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr);\r\n");
      out.write("\t\t\t\t\tconsole.log(textStatus);\r\n");
      out.write("\t\t\t\t\tconsole.log(errorTrown);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});//end of ajax\r\n");
      out.write("\t\t}//end of if alertsDropdown aria-expanded\r\n");
      out.write("\t}); // end of alertsDropdown click event\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//알람 div를 눌렀을 때 각각의 페이지로 보내준다.\r\n");
      out.write("\t $(document).on('click', 'div[id^=\"alertView\"]', function(){\r\n");
      out.write("\t\t \tvar alertType = $(this).children().children().eq(1).attr(\"value\");\r\n");
      out.write("\t\t \tvar storeNo ;\r\n");
      out.write("\t\t \tconsole.log(\"alertType : \"+alertType);\r\n");
      out.write("\t\t \tif(alertType === 'report'){\r\n");
      out.write("\t\t \t\tlocation.href= \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/reportList.do\";\r\n");
      out.write("\t\t \t}else if(alertType === 'qna'){\r\n");
      out.write("\t\t \t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/qnaControl.do\";\r\n");
      out.write("\t\t \t}else if(alertType === 'pms'){\r\n");
      out.write("\t\t \t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/storePMSList.do\";\r\n");
      out.write("\t\t \t}else if(alertType === 'review'){\r\n");
      out.write("\t\t \t\tstoreNo = $(this).attr(\"value\");\r\n");
      out.write("\t\t \t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/goSellerReview.do?storeNo=\"+storeNo;\r\n");
      out.write("\t\t \t}else if(alertType === 'order'){\r\n");
      out.write("\t\t \t\tstoreNo = $(this).attr(\"value\");\r\n");
      out.write("\t\t \t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/goMyStoreOrder.do?storeNo=\"+storeNo;\r\n");
      out.write("\t\t \t}\r\n");
      out.write("\t });\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//참여하는 채팅 유저\r\n");
      out.write("\tvar chatUserList = new Array();\r\n");
      out.write("\t//맨처음만 채팅유저 리스트를 받아오게하려고 0일때만 작동하도록함.\r\n");
      out.write("\tvar init = 0;\r\n");
      out.write("\tvar chattingId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'.trim().length==0?\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write(':');
      out.write('"');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\tconsole.log(chattingId);\r\n");
      out.write("\t //채팅방 목록 구현\r\n");
      out.write("\t $(\"#messagesDropdown\").on('click',function(){\r\n");
      out.write("\t\tif($(\"#messagesDropdown\").attr('aria-expanded') === 'false'){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/chatRoomList.do\",\r\n");
      out.write("\t\t\t\tdata : {\"sellerId\" : chattingId},\r\n");
      out.write("\t\t\t\ttype : \"get\",\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\ttimeStamp = \"\";\r\n");
      out.write("\t\t\t\t\tvar messageForm ;\r\n");
      out.write("\t\t\t\t\tvar mform = $(\"<div><h6 class='dropdown-header'>Message Center <div class='btn btn-link'  id='openChatRoom' data-toggle='modal' data-target='#createChatRoom' > <i class='fas fa-comment-dots'></i></div></h6></div>\");\r\n");
      out.write("\t\t\t\t\tvar bodyForm = $(\"<div class='dropdown-body'></div>\");\r\n");
      out.write("\t\t\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t\t\tvar message = data[i];\r\n");
      out.write("\t\t\t\t\t\tvar chatPerson = \"\";\r\n");
      out.write("\t\t\t\t\t\tif(message.SELLERID ===  chattingId){\r\n");
      out.write("\t\t\t\t\t\t\tchatPerson = message.SELLERID2;\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tchatPerson = message.SELLERID;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(realTimeConnectUser.length != 0){\r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(\"채팅방 목록 만들기전에 들어옴\");\r\n");
      out.write("\t\t\t\t\t\t\tvar chatUser = new Object();\r\n");
      out.write("\t\t\t\t\t\t\tvar connectFlag = false;\r\n");
      out.write("\t\t\t\t\t\t\tfor(var j in realTimeConnectUser){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(realTimeConnectUser[j] != null){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif(realTimeConnectUser[j] == chatPerson){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tif(init == 0){\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tconsole.log(\"on임!\"+init);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tchatUser.chatPerson = chatPerson;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tchatUser.status = \"on\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tchatUserList.push(chatUser);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmessageForm = $(\"<div class='dropdown-item d-flex align-items-center' id='messageView\"+i+\"' style='border : 1px solid gray; cursor : pointer;''> <div class='dropdown-list-image mr-3'>\"+chatPerson+\"<div class='status-indicator bg-success' id='memberstatus'><i class='far fa-grin' id='profileImage' ></i></div></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconnectFlag = true;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmessageForm = $(\"<div class='dropdown-item d-flex align-items-center' id='messageView\"+i+\"' style='border : 1px solid gray; cursor : pointer;''> <div class='dropdown-list-image mr-3'>\"+chatPerson+\"<div class='status-indicator bg-light' id='memberstatus'><i class='far fa-grin' id='profileImage' ></i></div></div></div>\");\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}//end of for\r\n");
      out.write("\t\t\t\t\t\t\tif(connectFlag == false){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(init == 0){\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconsole.log(\"off임!\"+init);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tchatUser.chatPerson = chatPerson;\r\n");
      out.write("\t\t\t\t\t\t\t\t\tchatUser.status = \"off\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\tchatUserList.push(chatUser);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}//end of if(connectUser.length != 0)\r\n");
      out.write("\t\t\t\t\t\tvar messageData = \"\";\r\n");
      out.write("\t\t\t\t\t\tvar notRead = 0;\r\n");
      out.write("\t\t\t\t\t\tif(message.SENDMEMBER !=  chattingId){\r\n");
      out.write("\t\t\t\t\t\t\tnotRead = message.NOTREADCOUNT;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tif(message.sendtime != null){\r\n");
      out.write("\t\t\t\t\t\t\ttimeStamp = (message.sendtime).substring(0,16);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tmessageData = \"<div class='text-truncate' id='messagePreviewContent' value=\"+message.chatroomno+\">\"+(message.CHATCONTENT != null?message.CHATCONTENT:'')+\"</div> &nbsp<div class='small text-gray-500' id='sendPerson'  value=\"+(message.SENDMEMBER != null?message.SENDMEMBER:'')+\">\"+(message.SENDMEMBER !=null ?message.SENDMEMBER+\" / \":'')+  timeStamp+\" <span class='badge badge-danger badge-counter' id='messageCount'>\"+notRead+\"</span></div>\";\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tmessageForm.append(messageData);\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\tbodyForm.append(messageForm);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tmform.append(bodyForm);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#messageDropdownBox\").html(mform);\r\n");
      out.write("\t\t\t\t\tinit = 1;\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(jqxhr,textStatus,errorTrown){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"채팅 목록 가져오는중 에러 남!\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr);\r\n");
      out.write("\t\t\t\t\tconsole.log(textStatus);\r\n");
      out.write("\t\t\t\t\tconsole.log(errorTrown);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});//end of ajax\r\n");
      out.write("\t\t}//end of if\r\n");
      out.write("\t });//end of messagesDropdown click event\r\n");
      out.write("\t \r\n");
      out.write("\t var socket = null;\r\n");
      out.write("\t//채팅방에서 메세지 전송을 누르면 웹소켓을 통해서 메세지가 전달됨.\r\n");
      out.write("\t$(document).on('click', 'button[id=\"sendMessage\"]', function(evt){\r\n");
      out.write("\t\t\tevt.preventDefault();\r\n");
      out.write("\t\t\tsendMsgTime = getTimeStamp();\r\n");
      out.write("\t\t\tvar sendContent = $(\"input[name=messageContent]\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(sendContent.trim().length != 0){//메세지 내용이 없으면 보내지 않는다.\r\n");
      out.write("\t\t\tif(socket.readyState !== 1) return;\r\n");
      out.write("\t\t\t\tsendMessage();\r\n");
      out.write("\t\t\tvar message = {\r\n");
      out.write("\t\t\t\t\tsendId :  chattingId,\r\n");
      out.write("\t\t\t\t\tsendContent : sendContent,\r\n");
      out.write("\t\t\t\t\tchatRoomNo : $(\"input[id=sendChatRoomNo]\").val(),\r\n");
      out.write("\t\t\t\t\tcurrentFocusChatRoomNo : hasFocusRoom\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\t//ajax를 통해서 DB에 채팅 로그를 담음.\r\n");
      out.write("\t\t\t $.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/insertChatLog.do\",\r\n");
      out.write("\t\t\t\tdata : message,\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t \tmessageData = \"<div class='messageFormatMyself' ><div class='text-truncate' id='messageContentShow' value=\"+message.chatRoomNo+\">\"+message.sendContent+\"</div> <div class='small text-gray-500' id='sendPerson'>\"+message.sendId+\" / \"+  sendMsgTime +\"</div> </div>\";\r\n");
      out.write("\t\t\t\t \t$(\"#chatView\").append(messageData);\r\n");
      out.write("\t\t\t \t\tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t\t\t$(\"#chatView\").scrollTop($(\"#chatView\")[0].scrollHeight);\r\n");
      out.write("\t\t \t\t\t},100);\r\n");
      out.write("\t\t\t \t\t$(\"input[name=messageContent]\").val(\"\");\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(jqxhr,textStatus,errorTrown){\r\n");
      out.write("\t\t \t\t\tconsole.log(\"작성한 채팅을 데이터베이스에 넣을때  에러 남!\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr);\r\n");
      out.write("\t\t\t\t\tconsole.log(textStatus);\r\n");
      out.write("\t\t\t\t\tconsole.log(errorTrown);\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t\t});//end of ajax\r\n");
      out.write("\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t//1. cmd(채팅),메세지 보낸자 ,메세지 받는자, 메세지 내용 (축소), 채팅방 번호, 보낸시간 ex) chat,sendUser,receiver,messageContent , chatRoomNo, sendTime\r\n");
      out.write("\tfunction sendMessage(){\r\n");
      out.write("\t\tvar msg ={};\r\n");
      out.write("\t\tmsg.cmd = \"chat\";\r\n");
      out.write("\t\tmsg.sender =  chattingId;\r\n");
      out.write("\t\tmsg.receiver = $(\"#communicateWith\").text();\r\n");
      out.write("\t\tmsg.content =  $(\"input[name='messageContent']\").val();\r\n");
      out.write("\t\tmsg.chatRoomNo = $(\"input[id=sendChatRoomNo]\").val();\r\n");
      out.write("\t\tmsg.sendTime = getTimeStamp();\r\n");
      out.write("\t\tsendMsgTime = msg.sendTime;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsocket.send(JSON.stringify(msg));\r\n");
      out.write("\t\t$(\"input[name=messageContent]\").val(\"\");\r\n");
      out.write("\t}\r\n");
      out.write("\t//2. cmd(리뷰),리뷰 작성자, 가게이름, 가게번호, 가게사장아이디\r\n");
      out.write("\tfunction sendReviewAlert(){\r\n");
      out.write("\t\tvar msg = {};\r\n");
      out.write("\t\tmsg.cmd = \"review\";\r\n");
      out.write("\t\tif(!'$(sellerLoggedIn)'){\r\n");
      out.write("\t\t\tmsg.writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tmsg.writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmsg.storeName = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${orderMenuList[0].STORENAME }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tmsg.storeNo = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${storeNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tmsg.sellerId = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tsocket.send(JSON.stringify(msg));\r\n");
      out.write("\t}\r\n");
      out.write("\t//3. cmd(실시간 접속자), 현재로그인되어있는사람\r\n");
      out.write("\tfunction sendRealTimeMember(){\r\n");
      out.write("\t\tvar msg = {};\r\n");
      out.write("\t\tmsg.cmd = \"realTimeMember\";\r\n");
      out.write("\t\tsocket.send(JSON.stringify(msg));\r\n");
      out.write("\t}\r\n");
      out.write("\t//4. cmd(신고),신고 작성자, 신고 유형\r\n");
      out.write("\tfunction sendReportAlert(){\r\n");
      out.write("\t\tvar msg = {};\r\n");
      out.write("\t\tmsg.cmd = \"report\";\r\n");
      out.write("\t\tif(!'$(sellerLoggedIn)'){\r\n");
      out.write("\t\t\tmsg.writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tmsg.writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmsg.reportType = reportType ;\r\n");
      out.write("\t\tmsg.receiver = \"admin\";\r\n");
      out.write("\t\tconsole.log(\"현재 신고유형은? \"+msg.reportType);\r\n");
      out.write("\t\tsocket.send(JSON.stringify(msg));\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction sendEnrollStore(storeName){\r\n");
      out.write("\t\tconsole.log(\"가게 신청 가게 이름 : \"+storeName);\r\n");
      out.write("\t\tvar msg = {};\r\n");
      out.write("\t\tmsg.cmd = \"pms\";\r\n");
      out.write("\t\tmsg.writer = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tmsg.storeName = storeName;\r\n");
      out.write("\t\tmsg.receiver = \"admin\";\r\n");
      out.write("\t\tsocket.send(JSON.stringify(msg));\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction getTimeStamp() {\r\n");
      out.write("\t\t   var date = new Date();\r\n");
      out.write("\t\t   var s =\r\n");
      out.write("\t\t     leadingZeros(date.getFullYear(), 4) + '-' +\r\n");
      out.write("\t\t     leadingZeros(date.getMonth() + 1, 2) + '-' +\r\n");
      out.write("\t\t     leadingZeros(date.getDate(), 2) + ' ' +\r\n");
      out.write("\r\n");
      out.write("\t\t     leadingZeros(date.getHours(), 2) + ':' +\r\n");
      out.write("\t\t     leadingZeros(date.getMinutes(), 2)\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t   return s;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t function leadingZeros(n, digits) {\r\n");
      out.write("\t\t   var zero = '';\r\n");
      out.write("\t\t   n = n.toString();\r\n");
      out.write("\r\n");
      out.write("\t\t   if (n.length < digits) {\r\n");
      out.write("\t\t     for (i = 0; i < digits - n.length; i++)\r\n");
      out.write("\t\t       zero += '0';\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t   return zero + n;\r\n");
      out.write("\t\t }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t$(document).ready(function(){\r\n");
      out.write("\t\t connectWebSocket();\r\n");
      out.write("\t});\r\n");
      out.write("\t \r\n");
      out.write("\t//개별 상세 채팅방 구현\r\n");
      out.write("\t $(document).on('click', 'div[id^=\"messageView\"]', function(){\r\n");
      out.write("\t\t \tvar notRead =  $(this).children().eq(2).children().text();\r\n");
      out.write("\t\t \tvar allNotRead ;\r\n");
      out.write("\t\t \tif($(\"#messageCount\").text().trim().length == 0){\r\n");
      out.write("\t\t \t\tallNotRead = 0;\r\n");
      out.write("\t\t \t}else{\r\n");
      out.write("\t\t \t allNotRead = parseInt($(\"#messageCount\").text());\r\n");
      out.write("\t\t \t if(allNotRead > 0)\r\n");
      out.write("\t\t \t\t$(\"#messageCount\").html(allNotRead-parseInt(notRead));\r\n");
      out.write("\t\t \t}\r\n");
      out.write("\t\t \tvar chatroominfo ={\r\n");
      out.write("\t\t \t\t\t\t\t\tchatRoomNo : $(this).children().eq(1).attr('value'),\r\n");
      out.write("\t\t \t\t\t\t\t\tsendId : $(this).children().eq(2).attr('value')!=chattingId.length != 0?$(this).children().eq(2).attr('value'):\"<no>\"\r\n");
      out.write("\t\t \t\t\t\t\t};\r\n");
      out.write("\t\t \t$.ajax({\r\n");
      out.write("\t\t \t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/chattingLog.do\",\r\n");
      out.write("\t\t \t\tdata : chatroominfo,\r\n");
      out.write("\t\t \t\tsuccess : function(data){\r\n");
      out.write("\t\t \t\t\t$(\"#chatModal\").modal('show');\r\n");
      out.write("\t\t \t\t\tsuccessLodingChatLogs(data);\r\n");
      out.write("\t\t \t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t \t\t\t$(\"#chatView\").scrollTop($(\"#chatView\")[0].scrollHeight);\r\n");
      out.write("\t\t\t \t\t},150);\r\n");
      out.write("\t\t \t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t \t\terror : function(jqxhr,textStatus,errorTrown){\r\n");
      out.write("\t\t \t\t\tconsole.log(\"채팅 기록을 가져오는중 에러 남!\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr);\r\n");
      out.write("\t\t\t\t\tconsole.log(textStatus);\r\n");
      out.write("\t\t\t\t\tconsole.log(errorTrown);\r\n");
      out.write("\t\t \t\t},\r\n");
      out.write("\t\t \t\tcomplete : function(){\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t \t});//end of ajax\r\n");
      out.write("\t\t \t\r\n");
      out.write("\t });\r\n");
      out.write("\t \r\n");
      out.write("\t function successLodingChatLogs(data){\r\n");
      out.write("\t\t \tmessageData = \"\";\r\n");
      out.write("\t\t\tvar myId =  chattingId;\r\n");
      out.write("\t\t\tvar youId = (myId != data[0].SELLERID2 ? data[0].SELLERID2 : data[0].SELLERID);\r\n");
      out.write("\t\t\tvar chatForm = $(\"<div style='height : 100%; padding: 0;'></div>\");\r\n");
      out.write("\t\t\tvar chatHeader;\r\n");
      out.write("\t\t\tif(realTimeConnectUser.length != 0){\r\n");
      out.write("\t\t\t\tconsole.log(\"채팅방 목록 만들기전에 들어옴\");\r\n");
      out.write("\t\t\t\tfor(var j in realTimeConnectUser){\r\n");
      out.write("\t\t\t\t\tif(realTimeConnectUser[j] == youId){\r\n");
      out.write("\t\t\t\t\t\t//console.log(\"접속중!\");\r\n");
      out.write("\t\t\t\t\t\tchatHeader = $(\"<div class='modal-header'> <h5 class='modal-title' id='exampleModalLabel'></h5>\t<div class='profileImage'><div class='status-indicator bg-success' id='memberstatus'><i class='far fa-grin' id='profileImage' ></i></div><div id='communicateWith'>\"+ youId +\"</div></div><button type='button' class='close' data-dismiss='modal' aria-label='Close' style='padding : 0.1em;'><span aria-hidden='true'>&times;</span></button></div>\");\r\n");
      out.write("\t\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t//console.log(\"아직 없음!\");\r\n");
      out.write("\t\t\t\t\t\tchatHeader = $(\"<div class='modal-header'> <h5 class='modal-title' id='exampleModalLabel'></h5>\t<div class='profileImage'><div class='status-indicator bg-light' id='memberstatus'><i class='far fa-grin' id='profileImage' ></i></div><div id='communicateWith'>\"+ youId +\"</div></div><button type='button' class='close' data-dismiss='modal' aria-label='Close' style='padding : 0.1em;'><span aria-hidden='true'>&times;</span></button></div>\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}//end of if(connectUser.length != 0)\r\n");
      out.write("\t\t\tvar chatBody = $(\"<div class='shadow rounded border border-success' id='chatView' style='height : 29rem;' ></div>\");\r\n");
      out.write("\t\t\tvar chatFooter = $(\"<div class='modal-footer' style='width : 100%;'><input type='hidden' id='sendChatRoomNo' value=\"+data[0].chatRoomNo+\" /><input type='text' class='form-control' name='messageContent' placeholder='메세지를 입력하세요.' id='messageContent' /><button type='button' class='btn btn-outline-success' id='sendMessage'>전송</button></div> \");\r\n");
      out.write("\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t//console.log(data[i]);\r\n");
      out.write("\t\t\t\t\tmessageType = data[i];\r\n");
      out.write("\t\t\t\tif(messageType.sendTime != null){\r\n");
      out.write("\t\t\t\t\ttimeStamp = (messageType.sendTime).substring(0,16);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data[i].SENDMEMBER == myId){\r\n");
      out.write("\t\t\t\t\t messageData = \"<div class='messageFormatMyself' ><div class='text-truncate' id='messageContentShow' style='left : -0.5em;' value=\"+messageType.chatRoomNo+\">\"+messageType.CHATCONTENT+\"</div> <div class='small text-gray-500' style='position : relative; left : -0.5em;' id='sendPerson'>\"+messageType.SENDMEMBER+\" / \"+  timeStamp +\"</div></div>\";\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t messageData = \"<div class='messageFormatHim' ><div class='text-truncate' id='messageContentShow' style='left : 0.5em;' value=\"+messageType.chatRoomNo+\">\"+messageType.CHATCONTENT+\"</div> <div class='small text-gray-500'style='position : relative; left : 0.5em;' id='sendPerson'>\"+messageType.SENDMEMBER+\" / \"+ timeStamp +\"</div></div>\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tchatBody.append(messageData);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tchatForm.html(chatHeader);\r\n");
      out.write("\t\t\tchatForm.append(chatBody);\r\n");
      out.write("\t\t\tchatForm.append(chatFooter);\r\n");
      out.write("\t\t\t$(\"#chatModalContent\").html(chatForm);\r\n");
      out.write("\t\t\troomNo = $(\"#sendChatRoomNo\").val();\r\n");
      out.write("\t\t\tconsole.log(\"채팅방 들어갈때 방번호 : \"+roomNo);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t }\r\n");
      out.write("\r\n");
      out.write("\t//현재 사용자가 어떤 채팅방을 보고있는지 hasFocusRoom이  0이면 아무것도 보고있지않다는 뜻.\r\n");
      out.write("\t $(\"#chatModal\")[0].addEventListener(\"blur\",function(){\r\n");
      out.write("\t\t hasFocusRoom = 0;  \r\n");
      out.write("\t\t //console.log(\"Page Has Not Focus \"+hasFocusRoom);\r\n");
      out.write("\t });\r\n");
      out.write("\t $(\"#chatModal\")[0].addEventListener(\"focusin\",function(){\r\n");
      out.write("\t\t hasFocusRoom = roomNo;  \r\n");
      out.write("\t\t //console.log(\"Page Has Focus \"+hasFocusRoom);\r\n");
      out.write("\t });\r\n");
      out.write("\t \r\n");
      out.write("\t // window.onfocus = function(){  \r\n");
      out.write("\t //    has_focus = true;  \r\n");
      out.write("\t //} \r\n");
      out.write("\r\n");
      out.write("\t/*  $(document).ready(function(){\r\n");
      out.write("\t    loading_time();\r\n");
      out.write("\t }); */ \r\n");
      out.write("\t////\r\n");
      out.write("\tvar roomNo = 0;\r\n");
      out.write("\tvar sendMsgTime = null;\r\n");
      out.write("\tvar alertType = null;\r\n");
      out.write("\tvar messageType = null;\r\n");
      out.write("\t //사용자가 어느 채팅방에 들어가 있는지 확인하는 변수\r\n");
      out.write("\tvar hasFocusRoom = 0;\r\n");
      out.write("\tvar messageData = \"\";\r\n");
      out.write("\tvar timeStamp = \"\";\r\n");
      out.write("\tvar messageCount = 0;\r\n");
      out.write("\t//실시간 유저 리스트를 웹소켓에서 받아오는 변수\r\n");
      out.write("\tvar realTimeConnectUser;\r\n");
      out.write("\t//신고시 신고유형을 담아서 웹소켓으로 전송하기 위한 변수.\r\n");
      out.write("\tvar reportType;\r\n");
      out.write("\t\r\n");
      out.write("\t//소켓으로 서버가 클라이언트한테 전달한 값을 바탕으로 만들어냄\r\n");
      out.write("\tfunction receiveMessage(alertType,messageType){\r\n");
      out.write("\t\t//console.log(hasFocusRoom+\" : \"+messageType.chatRoomNo);\r\n");
      out.write("\t\t//console.log(\"메세지 전송 후 : \"+alertType+\" : \"+messageType);\r\n");
      out.write("\t\t // 받는 사람이 현재 그 채팅방을 보고 있으면 알람을 주지 않고 메세지를 보냄.\r\n");
      out.write("\t\t if(hasFocusRoom === messageType.chatRoomNo){\r\n");
      out.write("\t\t\t// if(messageType.sender === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){\r\n");
      out.write("\t\t\t//\t messageData = \"<div class='messageFormatMyself' ><div class='text-truncate' id='messageContentShow' value=\"+messageType.chatRoomNo+\">\"+messageType.content+\"</div> <div class='small text-gray-500' id='sendPerson'>\"+messageType.sender+\" / \"+  (messageType.sendTime) +\"</div></div>\";\r\n");
      out.write("\t\t\t//}else{\r\n");
      out.write("\t\t\t\t messageData = \"<div class='messageFormatHim' ><div class='text-truncate' id='messageContentShow' value=\"+messageType.chatRoomNo+\">\"+messageType.content+\"</div> <div class='small text-gray-500' id='sendPerson'>\"+messageType.sender+\" / \"+  (messageType.sendTime) +\"</div></div>\";\r\n");
      out.write("\t\t\t//}\r\n");
      out.write("\t\t\t $(\"#chatView\").append(messageData);\r\n");
      out.write("\t\t\t setTimeout(function(){\r\n");
      out.write("\t\t \t\t\t$(\"#chatView\").scrollTop($(\"#chatView\")[0].scrollHeight);\r\n");
      out.write("\t\t \t},150);\r\n");
      out.write("\t\t }else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t $(\"#messageCount\").html($(\"#messageCount\").text().trim().length!=0?parseInt($(\"#messageCount\").text())+1:0+1);\r\n");
      out.write("\t\t\t $(\"#socketAlert\").css(\"display\",\"block\").text(alertType.sender+\"님이 \"+alertType.content+\"라고 보냄\");\r\n");
      out.write("\t\t \t\tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t\t$(\"#socketAlert\").css(\"display\",\"none\");\r\n");
      out.write("\t\t \t\t},3000); \r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t \r\n");
      out.write("\t }\r\n");
      out.write("\t//리뷰,신고등 알람이 올때 실행하는 함수\r\n");
      out.write("   function\talertMessage(alertType,type){\r\n");
      out.write("\t   if(type === 'review'){\r\n");
      out.write("\t\t\t $(\"#socketAlert\").css(\"display\",\"block\").text(alertType.reviewWriter+\"님이 \"+alertType.storeName+\"에(\"+alertType.storeNo +\")리뷰를 작성\");\r\n");
      out.write("\t\t\tvar alertCount = parseInt( $(\"#sellerAlertCount\").text())+1;\r\n");
      out.write("\t\t\t$(\"#sellerAlertCount\").html(alertCount);\r\n");
      out.write("\t\t \tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t$(\"#socketAlert\").css(\"display\",\"none\");\r\n");
      out.write("\t\t \t},3000);\r\n");
      out.write("\t\t }else if(type === 'report'){\r\n");
      out.write("\t\t\tvar alertCount = parseInt( $(\"#adminAlertCount\").text())+1;\r\n");
      out.write("\t\t\t$(\"#adminAlertCount\").html(alertCount);\r\n");
      out.write("\t\t\t$(\"#socketAlert\").css(\"display\",\"block\").text(alertType.reportWriter+\"님이  \"+alertType.reportType+\"를 접수함.\");\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t \tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t$(\"#socketAlert\").css(\"display\",\"none\");\r\n");
      out.write("\t\t \t},3000);\r\n");
      out.write("\t\t }else if(type === 'pms'){\r\n");
      out.write("\t\t\tvar alertCount = parseInt( $(\"#adminAlertCount\").text())+1;\r\n");
      out.write("\t\t\t$(\"#adminAlertCount\").html(alertCount);\r\n");
      out.write("\t\t\t$(\"#socketAlert\").css(\"display\",\"block\").text(alertType.reportWriter+\"님이  \"+alertType.reportType+\"라는 가게를 신청함.\");\r\n");
      out.write("\t\t \tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t$(\"#socketAlert\").css(\"display\",\"none\");\r\n");
      out.write("\t\t \t},3000);\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t }\r\n");
      out.write("\t}\r\n");
      out.write("\t function connectWebSocket(){\r\n");
      out.write("\t \tvar ws = new SockJS(\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"); \r\n");
      out.write("\t \tsocket = ws;\r\n");
      out.write("\t \tws.onopen = function(){\r\n");
      out.write("\t \t\tsendRealTimeMember();\r\n");
      out.write("\t \t\tconsole.log(\"Info : connection opened.\");\r\n");
      out.write("\t \t};\r\n");
      out.write("\t \t//서버로부터 메세지를 받을 때\r\n");
      out.write("\t \tws.onmessage = function(event){\r\n");
      out.write("\t \t\talertType = null;\r\n");
      out.write("\t \t\tmessageType = null;\r\n");
      out.write("\t \t\tvar message = JSON.parse(event.data);\r\n");
      out.write("\t \t\tfor(var i = 0; i < message.length; i++){\r\n");
      out.write("\t\t \t\tif(message[i].cmd === \"alert\")\r\n");
      out.write("\t\t \t\t\t  alertType = message[i];\r\n");
      out.write("\t\t \t\telse if(message[i].cmd === \"review\"){\r\n");
      out.write("\t\t \t\t\talertType = message[i];\r\n");
      out.write("\t\t\t\t\talertMessage(alertType,\"review\");\t\t \t\t\t\r\n");
      out.write("\t\t \t\t}else if(message[i] === \"realTimeMember\"){\r\n");
      out.write("\t\t \t\t\trealTimeConnectUser = new Array();\r\n");
      out.write("\t\t \t\t\tfor(var j = 1; j < message.length; j++){\r\n");
      out.write("\t\t \t\t\t\trealTimeConnectUser.push(message[j]);\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t \t/* if(chatUserList.length != 0){\r\n");
      out.write("\t\t \t\t\t\tconsole.log(\"현재 채팅중인 사람 : \"+chatUserList.length+\" 명\");\r\n");
      out.write("\t\t \t\t\t\tconsole.log(\"현재 채팅중인 사람 : \"+chatUserList[0].chatPerson+\" 명\");\r\n");
      out.write("\t\t \t\t\t}  */\r\n");
      out.write("\t\t \t\t\t//실시간으로  상태 바꿔줌. on,off을 넣어서 on이면 온라인, off면 오프라인이라는 뜻.\r\n");
      out.write("\t\t \t\t\tfor(var j = 0; j < chatUserList.length; j++){\r\n");
      out.write("\t\t \t\t\t\tvar currentChatUser = chatUserList[j].chatPerson;\r\n");
      out.write("\t\t \t\t\t\tvar currentUserStatus = chatUserList[j].status;\r\n");
      out.write("\t\t \t\t\t\tvar statusFlag = false;\r\n");
      out.write("\t\t \t\t\t\tfor(var k = 0; k < realTimeConnectUser.length; k++){\r\n");
      out.write("\t\t \t\t\t\t\t if(realTimeConnectUser[k] == null){//웹소켓에서 바로 삭제하면 null값이 들어간다. 따라서 null이 넘어오기 때문에 null은 걸러준다.\r\n");
      out.write("\t\t \t\t\t\t\t\tcontinue;\r\n");
      out.write("\t\t \t\t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t\tif(realTimeConnectUser[k] == currentChatUser){\r\n");
      out.write("\t\t \t\t\t\t\t\tstatusFlag = true;\r\n");
      out.write("\t\t \t\t\t\t\t\tchatUserList[j].status = \"on\";\r\n");
      out.write("\t\t \t\t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t}//end of for realTimeConnectUser\r\n");
      out.write("\t\t \t\t\t\tif(statusFlag == false){\r\n");
      out.write("\t\t \t\t\t\t\tchatUserList[j].status = \"off\";\r\n");
      out.write("\t\t \t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t//채팅방 목록의 상태\r\n");
      out.write("\t\t \t\t\t\tif(chatUserList[j].status === \"on\"){\r\n");
      out.write("\t\t \t\t\t\t\t$(\"div[id^=messageView]\").each(function(i){\r\n");
      out.write("\t\t \t\t\t\t\t\tvar loginSeller = $(\"#messageView\"+i).children().eq(0).text();\r\n");
      out.write("\t\t \t\t\t\t\t\tconsole.log(\"dd : \"+loginSeller);\r\n");
      out.write("\t\t \t\t\t\t\t\tif(loginSeller === currentChatUser){\r\n");
      out.write("\t\t \t\t\t\t\t\t\t$(\"#messageView\"+i).children().children().eq(0).attr(\"class\",\"status-indicator bg-success\");\r\n");
      out.write("\t\t \t\t\t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t\t});\r\n");
      out.write("\t\t \t\t\t\t}else{\r\n");
      out.write("\t\t \t\t\t\t\t$(\"div[id^=messageView]\").each(function(i){\r\n");
      out.write("\t\t \t\t\t\t\t\tvar loginSeller = $(\"#messageView\"+i).children().eq(0).text();\r\n");
      out.write("\t\t \t\t\t\t\t\tconsole.log(\"ss : \"+loginSeller);\r\n");
      out.write("\t\t \t\t\t\t\t\tif(loginSeller === currentChatUser){\r\n");
      out.write("\t\t \t\t\t\t\t\t\t$(\"#messageView\"+i).children().children().eq(0).attr(\"class\",\"status-indicator bg-light\");\r\n");
      out.write("\t\t \t\t\t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t\t});\r\n");
      out.write("\t\t \t\t\t\t}//end of if status\r\n");
      out.write("\t\t \t\t\t\t//개별 채팅방의 상태를 나타내기 위한 if문\r\n");
      out.write("\t \t\t\t\t\tvar nowChatView = $(\"#communicateWith\").text();\r\n");
      out.write("\t \t\t\t\t\tconsole.log(\"현재 비활성화되어있는걸 활성화 개별 채팅방 : \"+nowChatView);\r\n");
      out.write("\t \t\t\t\t\tif(nowChatView === currentChatUser){\r\n");
      out.write("\t \t\t\t\t\t\t//var nowStatus = $(\".profileImage\").children().eq(0).attr(\"class\");\r\n");
      out.write("\t \t\t\t\t\t\tif(chatUserList[j].status === \"on\"){\r\n");
      out.write("\t\t \t\t\t\t\t\t$(\".profileImage\").children().eq(0).attr(\"class\",\"status-indicator bg-success\");\r\n");
      out.write("\t \t\t\t\t\t\t}else{\r\n");
      out.write("\t\t \t\t\t\t\t\t$(\".profileImage\").children().eq(0).attr(\"class\",\"status-indicator bg-light\");\r\n");
      out.write("\t \t\t\t\t\t\t}//end of if status\r\n");
      out.write("\t \t\t\t\t\t}//end of if(new ChatView == currentChatUser[j])\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t\tbreak;\r\n");
      out.write("\t\t \t\t}else if(message[i] === \"forcedlogout\"){\r\n");
      out.write("\t\t \t\t\talert(\"현재 다른 브라우져에서 강제 로그아웃을 요청했습니다.\");\r\n");
      out.write("\t\t \t\t\tlocation.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/sellerLogout.do?sellerId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t \t\t}else if(message[i].cmd = \"report\"){\r\n");
      out.write("\t\t \t\t\talertType = message[i];\r\n");
      out.write("\t\t \t\t\talertMessage(alertType,\"report\");\r\n");
      out.write("\t\t \t\t}else if(message[i].cmd = \"pms\"){\r\n");
      out.write("\t\t \t\t\talertType = message[i];\r\n");
      out.write("\t\t \t\t\talertMessage(alertType,\"pms\");\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t \t\telse\r\n");
      out.write("\t\t \t\t\t messageType = message[i];\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t \t\tif(alertType != null && messageType != null){\r\n");
      out.write("\t \t\t\tconsole.log(alertType);\r\n");
      out.write("\t\t \t\treceiveMessage(alertType,messageType);\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t \t\t\r\n");
      out.write("\t \t};\r\n");
      out.write("\t \tws.onclose = function(event){\r\n");
      out.write("\t \t\tsendRealTimeMember();\r\n");
      out.write("\t \t\tconsole.log(\"Info : connection closed.\");\r\n");
      out.write("\t \t};\r\n");
      out.write("\t \tws.onerror = function(err){\r\n");
      out.write("\t \t\tconsole.log(\"Error : \",err);\r\n");
      out.write("\t \t}; \r\n");
      out.write("\t \t\r\n");
      out.write("\t }\r\n");
      out.write("\t \r\n");
      out.write("\t var scrollPosition = 0;\r\n");
      out.write("\t var curHeight = 0;\r\n");
      out.write("\t//추가할 채팅방 사람ID를 검색할때 ajax를 사용해서 자동완성\r\n");
      out.write("\t$(\"#insertId\").keyup(function(e){\r\n");
      out.write("\t\tvar selected = $(\".selected\");\r\n");
      out.write("\t\tvar li = $(\"#autoComplete li\");\r\n");
      out.write("\t\tif(e.key == 'ArrowDown'){\r\n");
      out.write("\t\t\tcurHeight += $(this).height();\r\n");
      out.write("\t\t\tif(curHeight > $(\"#autoComplete\").height()){\r\n");
      out.write("\t\t\tscrollPosition += $(this).height();\r\n");
      out.write("\t\t\t$(\"#autoComplete\").animate({\r\n");
      out.write("\t\t\t\tscrollTop : scrollPosition\r\n");
      out.write("\t\t\t},100);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif(selected.length == 0){\r\n");
      out.write("\t\t\t\t$(\"#autoComplete li:first\").addClass(\"selected\");\r\n");
      out.write("\t\t\t}else if(selected.is(li.last())){\r\n");
      out.write("\t\t\t\t//처리코드없음\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tselected.removeClass(\"selected\").next().addClass(\"selected\");\r\n");
      out.write("\t\t\t}\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else if(e.key == 'ArrowUp'){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tscrollPosition -= $(this).height() ;\r\n");
      out.write("\t\t\t$(\"#autoComplete\").animate({\r\n");
      out.write("\t\t\t\tscrollTop : scrollPosition\r\n");
      out.write("\t\t\t},100);\r\n");
      out.write("\t\t\tif(selected.length == 0){\r\n");
      out.write("\t\t\t\t//처리코드 없음 \r\n");
      out.write("\t\t\t}else if(selected.is(li.first())){\r\n");
      out.write("\t\t\t\tselected.removeClass(\"selected\");\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tselected.removeClass(\"selected\").prev().addClass(\"selected\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}else if(e.key == 'Enter'){\r\n");
      out.write("\t\t\t//값 선택\r\n");
      out.write("\t\t\t$(this).val(selected.text());\r\n");
      out.write("\t\t\t//검색어 목록은 감추고, li태그들은 모두 삭제\r\n");
      out.write("\t\t\t$(\"#autoComplete\").hide().children().remove();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tvar searchId = $(this).val();\r\n");
      out.write("\t\t\tif(searchId.trim().length == 0){\r\n");
      out.write("\t\t\t\t$(\"#autoComplete\").css('display','none');\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/searchPerson.do\",\r\n");
      out.write("\t\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\t\tdata : {searchId : searchId},\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconsole.log(\"검색ID들 : \"+data);\r\n");
      out.write("\t\t\t\t\tvar html = \"\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tfor(var i in data){\r\n");
      out.write("\t\t\t\t\t\tvar name = data[i].sellerId;\r\n");
      out.write("\t\t\t\t\t\thtml += \"<li id='searchId'\"+i+\" data-target='#data'\"+i+\">\"+name.replace(searchId,\"<span class='srchVal'>\"+searchId+\"</span>\")+\"</li>\";\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//서버로부터 전달된값이 있는경우에만 보이게 처리\r\n");
      out.write("\t\t\t\t\tif(data.length != 0){//nameArr.length > 1 도 됨\r\n");
      out.write("\t\t\t\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t\t\t\t\t$(\"#autoComplete\").html(html).css('display','block').css(\"overflow-y\",\"auto\").css(\"max-height\",\"7rem\");\r\n");
      out.write("\t\t\t\t\t\t},150); \r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t$(document).on('click', 'li[id^=\"searchId\"]',function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"input[name=searchPerson]\").val($(this).text());\r\n");
      out.write("\t\t//검색어 목록은 감추고, li태그들은 모두 삭제\r\n");
      out.write("\t\t$(\"#autoComplete\").hide().children().remove();\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction confirmOrNot(value){\r\n");
      out.write("\t\tvar searchId = {\r\n");
      out.write("\t\t\t\taddId : $(\"input[name=searchPerson]\").val(),\r\n");
      out.write("\t\t\t\tloginId : chattingId\t\t\t\t\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\tif(searchId.addId != searchId.loginId){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\tif($(\"input[name=confirmContent]\").attr('placeholder') ==='정말로 추가하시겠습니까?' ){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/addPerson.do\",\r\n");
      out.write("\t\t\tdata : searchId,\r\n");
      out.write("\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tif(data[0].SELLERID === '존재하지않는아이디'){\r\n");
      out.write("\t\t\t\t\t$(\"#confirmModal\").modal('hide');\r\n");
      out.write("\t\t\t\t\talert('아이디가 존재하지 않습니다.');\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t$(\"#createChatRoom\").modal('hide');\r\n");
      out.write("\t\t\t\t\t$(\"#confirmModal\").modal('hide');\r\n");
      out.write("\t\t\t\t\t$(\"#chatModal\").modal('show');\r\n");
      out.write("\t\t\t\t\tsuccessLodingChatLogs(data);\r\n");
      out.write("\t\t\t\t\tsetTimeout(function(){\r\n");
      out.write("\t\t \t\t\t\t$(\"#chatView\").scrollTop($(\"#chatView\")[0].scrollHeight);\r\n");
      out.write("\t\t \t\t\t},100);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(jqxhr,textStatus,errorTrown){\r\n");
      out.write("\t \t\t\tconsole.log(\"채팅방 만들다가 에러 남!\");\r\n");
      out.write("\t\t\t\tconsole.log(jqxhr);\r\n");
      out.write("\t\t\t\tconsole.log(textStatus);\r\n");
      out.write("\t\t\t\tconsole.log(errorTrown);\r\n");
      out.write("\t \t\t}\r\n");
      out.write("\t\t});//end of ajax\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#confirmModal\").modal('hide');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\talert('자신의 아이디를 초대할 수 없습니다.');\r\n");
      out.write("\t\t\t$(\"#confirmModal\").modal('hide');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t$(\"#addPersonForChatBtn\").on('click',function(){\r\n");
      out.write("\t\tif($(\"input[name=searchPerson]\").val().trim().length == 0){\r\n");
      out.write("\t\t\t$(\"input[name=confirmContent]\").attr('placeholder','아이디를 입력해주세요');\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"input[name=confirmContent]\").attr('placeholder','정말로 추가하시겠습니까?');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\tfunction  findId(){\r\n");
      out.write("\t\tvar email = $(\"#find-id\").val();\r\n");
      out.write("\t\tconsole.log(email);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl :  \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/findId.do\",\r\n");
      out.write("\t\t\tdata : {email : email},\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\talert(data.msg);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(){\r\n");
      out.write("\t\t\t\tconsole.log(\"ajax요청 에러!\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\tfunction findPwd(){\r\n");
      out.write("\t\tvar id = $(\"#find-pwd\").val().trim();\r\n");
      out.write("\t\tvar phone = $(\"#find-pwd1\").val().trim();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(phone.length <= 0){\r\n");
      out.write("\t\t\talert(\"핸드폰 번호를 입력해 주세요.\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tconsole.log(id);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/findPwd.do\",\r\n");
      out.write("\t\t\ttype : \"post\",\r\n");
      out.write("\t\t\tdata : {id : id , phone : phone},\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\talert(data.msg);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(){\r\n");
      out.write("\t\t\t\tconsole.log(\"ajax요청 에러!\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"find-pwd1\").on(\"keyup\", function(){\r\n");
      out.write("\t\t $(this).val($(this).val().replace(/[^0-9]/g,\"\"));\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t//로딩 되면 판매자일때 안읽은 메세지 뜨게함.\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/notReadMessage.do?sellerId='+'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\t\tvar messageCount = parseInt(data.message);\r\n");
      out.write("\t\t\t\t\t\tvar reviewCount = parseInt(data.review);\r\n");
      out.write("\t\t\t\t\t\tvar orderCount = parseInt(data.order);\r\n");
      out.write("\t\t\t\t\t\tconsole.log(orderCount+\" : 리뷰 : \"+reviewCount);\r\n");
      out.write("\t\t\t\t\t\t$(\"#sellerAlertCount\").html(orderCount+reviewCount);\r\n");
      out.write("\t\t\t\t\t\t$(\"#messageCount\").html(messageCount);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t//관리자일때\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/chat/notReadMessage.do?sellerId=admin',\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\t\tvar messageCount = parseInt(data.message);\r\n");
      out.write("\t\t\t\t\t\tvar reportCount = parseInt(data.report);\r\n");
      out.write("\t\t\t\t\t\tvar pmsCount = parseInt(data.pms);\r\n");
      out.write("\t\t\t\t\t\tvar qnaCount = parseInt(data.qna);\r\n");
      out.write("\t\t\t\t\t\t$(\"#messageCount\").html(messageCount);\r\n");
      out.write("\t\t\t\t\t\t$(\"#adminAlertCount\").html(reportCount+pmsCount+qnaCount);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#autologin\").on(\"click\" , function(){\r\n");
      out.write("\t\t//console.log(\"클릭 먹니?\");\r\n");
      out.write("\t\tif($(\"#autologin\").is(\":checked\")){\r\n");
      out.write("\t\t\t$(\"#autologin1\").val(\"yes\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#autologin1\").val(\"no\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("   <section id=\"content\">");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/common/header.jsp(282,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId eq 'admin' }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t     \t <li class=\"nav-item\">\r\n");
          out.write("\t\t        \t<a class=\"nav-link\" href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/admin/dashBoard.do\">관리자</a>\r\n");
          out.write("\t\t     \t </li>\r\n");
          out.write("\t\t      ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/common/header.jsp(290,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t   \t\t");
          if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /WEB-INF/views/common/header.jsp(291,7) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<!--https://getbootstrap.com/docs/4.1/components/buttons/#outline-buttons-->\r\n");
          out.write("\t\t\t\t\t<button class=\"btn btn-outline-success header-btn\" type=\"button\" data-toggle=\"modal\" data-target=\"#loginModal\">로그인</button> \r\n");
          out.write("\t\t\t \t\t&nbsp;  \r\n");
          out.write("\t\t\t\t\t<button class=\"btn btn-outline-success header-btn\" type=\"button\" \r\n");
          out.write("\t\t     \t\t\t\tonclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/chooseEnrollType.do'\">회원가입</button>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/common/header.jsp(301,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t  ");
          if (_jspx_meth_c_005fif_005f4(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /WEB-INF/views/common/header.jsp(302,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t  \t");
          if (_jspx_meth_c_005fif_005f5(_jspx_th_c_005fif_005f4, _jspx_page_context))
            return true;
          out.write("\t\r\n");
          out.write("\t\t\t  \t<!-- onclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/member/memberEnroll.do' -->\r\n");
          out.write("\t\t\t  \t");
          if (_jspx_meth_c_005fif_005f6(_jspx_th_c_005fif_005f4, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fif_005f7(_jspx_th_c_005fif_005f4, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t<button class=\"btn btn-outline-sucess\" type=\"button\" \r\n");
          out.write("\t\t\t\t\t\tonclick = \"memberLogOut();\">로그아웃</button>\r\n");
          out.write("\t\t\t\t\r\n");
          out.write("\t\t\t  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f5 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f5_reused = false;
    try {
      _jspx_th_c_005fif_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
      // /WEB-INF/views/common/header.jsp(303,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f5.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${'admin' == memberLoggedIn.memberId}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f5 = _jspx_th_c_005fif_005f5.doStartTag();
      if (_jspx_eval_c_005fif_005f5 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t  \t\t<ul class=\"navbar-nav ml-auto\">\r\n");
          out.write("            \t\t<li class=\"nav-item dropdown no-arrow mx-1\">\r\n");
          out.write("              \t\t<a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
          out.write("\t\t\t\t\t<i class=\"fas fa-bell fa-fw\"></i>\r\n");
          out.write("                <!-- Counter - Alerts -->\r\n");
          out.write("                <span class=\"badge badge-danger badge-counter\" id=\"adminAlertCount\"></span>\r\n");
          out.write("              </a>\r\n");
          out.write("              <!-- Dropdown - Alerts -->\r\n");
          out.write("              <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" id=\"alertsDropdownBox\" aria-labelledby=\"alertsDropdown\">\r\n");
          out.write("               \r\n");
          out.write("              </div>\r\n");
          out.write("            </li>\r\n");
          out.write("\r\n");
          out.write("            <!-- 메신저 -->\r\n");
          out.write("            <li class=\"nav-item dropdown no-arrow mx-1\">\r\n");
          out.write("              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
          out.write("\t\t\t\t<i class=\"fas fa-envelope fa-fw\"></i>\r\n");
          out.write("                <!-- Counter - Messages -->\r\n");
          out.write("                <span class=\"badge badge-danger badge-counter\" id=\"messageCount\"></span>\r\n");
          out.write("              </a>\r\n");
          out.write("              <!-- Dropdown - Messages -->\r\n");
          out.write("              <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\" id=\"messageDropdownBox\" style=\"width : 30rem;\">\r\n");
          out.write("             \r\n");
          out.write("              </div>\r\n");
          out.write("            </li>\r\n");
          out.write("            </ul> <!-- ul.navbar-nav ml-auto -->\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f5.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f5);
      _jspx_th_c_005fif_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f6 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f6_reused = false;
    try {
      _jspx_th_c_005fif_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
      // /WEB-INF/views/common/header.jsp(332,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f6.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId != 'admin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f6 = _jspx_th_c_005fif_005f6.doStartTag();
      if (_jspx_eval_c_005fif_005f6 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/member/memberView.do?memberId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('"');
          out.write('>');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>님 안녕하세요 &nbsp;\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f6.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f6);
      _jspx_th_c_005fif_005f6_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f6, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f6_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f4, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f7 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f7_reused = false;
    try {
      _jspx_th_c_005fif_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f4);
      // /WEB-INF/views/common/header.jsp(335,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f7.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberId == 'admin'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f7 = _jspx_th_c_005fif_005f7.doStartTag();
      if (_jspx_eval_c_005fif_005f7 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("님 안녕하세요 &nbsp;\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f7.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f7);
      _jspx_th_c_005fif_005f7_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f7, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f7_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f8(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f8 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f8_reused = false;
    try {
      _jspx_th_c_005fif_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f8.setParent(null);
      // /WEB-INF/views/common/header.jsp(345,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f8.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f8 = _jspx_th_c_005fif_005f8.doStartTag();
      if (_jspx_eval_c_005fif_005f8 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t  ");
          if (_jspx_meth_c_005fif_005f9(_jspx_th_c_005fif_005f8, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f8.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f8);
      _jspx_th_c_005fif_005f8_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f8, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f8_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f8, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f9 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f9_reused = false;
    try {
      _jspx_th_c_005fif_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f8);
      // /WEB-INF/views/common/header.jsp(346,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f9.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberLoggedIn == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f9 = _jspx_th_c_005fif_005f9.doStartTag();
      if (_jspx_eval_c_005fif_005f9 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t  <!-- 알람  -->\r\n");
          out.write("\t\t\t<ul class=\"navbar-nav ml-auto\">\r\n");
          out.write("            <li class=\"nav-item dropdown no-arrow mx-1\">\r\n");
          out.write("              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"alertsDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
          out.write("\t\t\t\t<i class=\"fas fa-bell fa-fw\"></i>\r\n");
          out.write("                <!-- Counter - Alerts -->\r\n");
          out.write("                <span class=\"badge badge-danger badge-counter\" id=\"sellerAlertCount\"></span>\r\n");
          out.write("              </a>\r\n");
          out.write("              <!-- Dropdown - Alerts -->\r\n");
          out.write("              <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" id=\"alertsDropdownBox\" aria-labelledby=\"alertsDropdown\" style=\"width : 30rem;\">\r\n");
          out.write("               \r\n");
          out.write("              </div>\r\n");
          out.write("            </li>\r\n");
          out.write("\r\n");
          out.write("            <!-- 메신저 -->\r\n");
          out.write("            <li class=\"nav-item dropdown no-arrow mx-1\">\r\n");
          out.write("              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"messagesDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
          out.write("\t\t\t\t<i class=\"fas fa-envelope fa-fw\"></i>\r\n");
          out.write("                <!-- Counter - Messages -->\r\n");
          out.write("                <span class=\"badge badge-danger badge-counter\" id=\"messageCount\"></span>\r\n");
          out.write("              </a>\r\n");
          out.write("              <!-- Dropdown - Messages -->\r\n");
          out.write("              <div class=\"dropdown-list dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"messagesDropdown\" id=\"messageDropdownBox\" style=\"width : 30rem;\">\r\n");
          out.write("             \r\n");
          out.write("              </div>\r\n");
          out.write("            </li>\r\n");
          out.write("            </ul> <!-- ul.navbar-nav ml-auto -->\r\n");
          out.write("            \r\n");
          out.write("\t\t\t<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/seller/sellerView.do\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</a>&nbsp;사장님 안녕하세요 &nbsp;\r\n");
          out.write("\t\t\t<button class=\"btn loginbtn\"  type=\"button\" onclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/seller/sellerLogout.do?sellerId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'\">로그아웃</button>\r\n");
          out.write("\t\t    &nbsp;  \r\n");
          out.write("\t\t \t<button class=\"btn btn-outline-success header-btn\" type=\"button\"  id=\"myStore-btn\"\r\n");
          out.write("\t\t \t onclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/seller/goMyStore.do?sellerId=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sellerLoggedIn.sellerId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'\" >내가게</button> \r\n");
          out.write("\t\t  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f9.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f9);
      _jspx_th_c_005fif_005f9_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f9, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f9_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/common/header.jsp(1011,24) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/echo");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
