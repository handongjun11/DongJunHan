/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-03-08 09:17:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.seller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class sellerEnroll_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1548321130691L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/Workspaces/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_fmt_005frequestEncoding_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("div#MemberEnroll-container{\r\n");
      out.write("    margin: 150px auto 0;\r\n");
      out.write("\twidth : 800px;\r\n");
      out.write("\ttext-align : center;\r\n");
      out.write("}\r\n");
      out.write("div.form-group label{ padding-top : 0.5em; text-align: left;}\r\n");
      out.write("div.form-group input{\r\n");
      out.write("\twidth : 280px;\r\n");
      out.write("}\r\n");
      out.write("div#inputProfile{\r\n");
      out.write("\tborder: 1px solid;\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    width: 150px;\r\n");
      out.write("    height: 150px;\r\n");
      out.write("    z-index: 100;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 71%;\r\n");
      out.write("    top: 27%;\r\n");
      out.write("}\r\n");
      out.write("input#gender1, input#gender2{width : 30px;}\r\n");
      out.write("input#gender2 {margin-left:50px;}\r\n");
      out.write("select#selectYear{ width : 100px;}\r\n");
      out.write("select#selectMonth, select#selectDay{ width : 65px;}\r\n");
      out.write("span#ok{\r\n");
      out.write("\tcolor: green;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tleft: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("span#error{\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("    left: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("span#error2{\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("    left: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write(".form-group row span.guide{\r\n");
      out.write("\t/* display: none; */\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop : 12px;\r\n");
      out.write("\tright: 10px; \r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("span#passworderror{\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("    left: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("span#passworderror2{\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("    left: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("span#passworderror3{\r\n");
      out.write("\tcolor: red;\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("    left: 16px;\r\n");
      out.write("    top: 4px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write(".btn-outline-success:hover {\r\n");
      out.write("\t background-color: #117a8b; \r\n");
      out.write("     border-color: white;\r\n");
      out.write("     color : white;\r\n");
      out.write("}\r\n");
      out.write(".btn-outline-success{\r\n");
      out.write("     border-color: #117a8b;\r\n");
      out.write("     color : #117a8b;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"MemberEnroll-container\">\r\n");
      out.write("\t<h2>사업자 회원 가입</h2>\r\n");
      out.write("\t<br />\r\n");
      out.write("\t<hr />\t\r\n");
      out.write("\t<br />\r\n");
      out.write("\t\r\n");
      out.write("\t<form name=\"sellerEnrollFrm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/sellerEnrollEnd.do\" \r\n");
      out.write("\t\t  method=\"post\" \r\n");
      out.write("\t\t  onsubmit=\"return validate();\" >\r\n");
      out.write("\t\t<!-- 아이디 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputSellerId\" class=\"col-sm-3\">아이디</label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputSellerId\" name=\"sellerId\" placeholder=\"6~16자 영문,숫자\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t\t<!-- 중복 관련 체크  -->\r\n");
      out.write("    \t\t<span class=\"guide ok\" id=\"ok\">이 아이디는 사용 가능합니다.</span>\r\n");
      out.write("    \t\t<span class=\"guide error\" id=\"error\">이 아이디는 사용할 수 없습니다.</span>\r\n");
      out.write("    \t\t<span class=\"guide error\" id=\"error2\">특수 문자 및 공백을 제거해 주세요.</span>\r\n");
      out.write("    \t\t<input type=\"hidden\" name=\"idDuplicateCheck\" id=\"idDuplicateCheck\" value=\"0\" />\r\n");
      out.write("  \t\t</div>\t\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<!-- 비밀번호 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputPassword\" class=\"col-sm-3\">비밀번호</label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"password\"  name=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"6~16자 영문,숫자\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t\t<span class=\"guide error\" id=\"passworderror3\">특수 문자 및 공백을 제거해 주세요.</span>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"checkPassword\" class=\"col-sm-3\">비밀번호 확인</label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"password\" class=\"form-control\" id=\"checkPassword\" placeholder=\"Password Check\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t\t<span class=\"guide error\" id=\"passworderror\">비밀번호가 일치하지 않습니다.</span>\r\n");
      out.write("    \t\t<span class=\"guide error\" id=\"passworderror2\">특수 문자 및 공백을  제거해 주세요.</span>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t<hr />\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 이름 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("    \t\t<label for=\"inputMemberName\" class=\"col-sm-3\">이름</label>\r\n");
      out.write("    \t\t<div>\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" name=\"sellerName\" id=\"inputMemberName\">\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("  \t\t</div>\t\t\r\n");
      out.write("  \t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- 이메일 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"email\" />\r\n");
      out.write("    \t\t<label for=\"inputEmail\" class=\"col-sm-3\">이메일</label>\r\n");
      out.write("    \t\t<div class=\"form-inline\">\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputEmailAddress\">\r\n");
      out.write("      \t\t\t&nbsp;@&nbsp;\r\n");
      out.write("      \t\t\t<input type=\"text\" class=\"form-control\" id=\"inputEmailAddress1\" >\r\n");
      out.write("      \t\t\t&nbsp;\r\n");
      out.write("      \t\t\t<select class=\"form-control\" id=\"selectEmailAddress\" >\r\n");
      out.write("      \t\t\t\t <option value=\"\">선택하세요</option>\r\n");
      out.write("      \t\t\t\t <option value=\"naver.com\">naver.com</option>\r\n");
      out.write("                     <option value=\"hanmail.net\">hanmail.net</option>\r\n");
      out.write("                     <option value=\"nate.com\">nate.com</option>\r\n");
      out.write("                     <option value=\"daum.net\">daum.net</option>\r\n");
      out.write("                     <option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("                     <option value=\"etc\">직접입력</option>\r\n");
      out.write("      \t\t\t</select> \r\n");
      out.write("      \t\t</div>\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\r\n");
      out.write("\t\r\n");
      out.write("\t\t<!-- 핸드폰 번호 -->\r\n");
      out.write("\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"phone\" />\r\n");
      out.write("\t\t\t<label for=\"selectPhone\" class=\"col-sm-3\">핸드폰 번호</label>\t\r\n");
      out.write("\t\t\t<div class=\"form-inline\">\r\n");
      out.write("\t\t\t\t<select class=\"form-control selectPhone\" id=\"selectPhone\" > \r\n");
      out.write("\t  \t\t\t\t<option selected=\"selected\">010</option>\r\n");
      out.write("\t  \t\t\t\t<option>019</option>\r\n");
      out.write("\t  \t\t\t\t<option>016</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t\t<input class=\"form-control selectPhone\" type=\"text\" id=\"phone1\" maxlength=\"4\" style=\"width: 80px;\"\r\n");
      out.write("\t\t\t\t\t   onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"/>  \r\n");
      out.write("\t\t\t\t&nbsp;-&nbsp;\r\n");
      out.write("\t\t\t\t<input class=\"form-control selectPhone\" type=\"text\" id=\"phone2\" maxlength=\"4\" style=\"width: 80px;\" \r\n");
      out.write("\t\t\t\t\t   onKeyup=\"this.value=this.value.replace(/[^0-9]/g,'');\"/>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<input type=\"submit\" class=\"btn btn-outline-success\" value=\"가입하기\" >\r\n");
      out.write("\t\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function validate(){ /* 유효성 검사 */\r\n");
      out.write("\t\r\n");
      out.write("\tif($(\"#inputSellerId\").val().trim().length < 7){\r\n");
      out.write("\t      alert(\"아이디는 6글자 이상 입력해주세요\");\r\n");
      out.write("\t      return false;\t      \r\n");
      out.write(" \t}else if( $(\"#inputSellerId\").val().trim().length >16){\r\n");
      out.write(" \t\talert(\"아이디는 16글자 이하 입력해주세요\");\r\n");
      out.write("\t      return false;\t\r\n");
      out.write(" \t\t\r\n");
      out.write(" \t}\r\n");
      out.write("\t//아이디 중복 검사\r\n");
      out.write("\tif($(\"#idDuplicateCheck\").val()==0){\r\n");
      out.write("\t\t\talert(\"아이디 중복검사를 해주세요\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write(" \t\r\n");
      out.write("\tif($(\"#password_\").val() != $(\"#password2\").val()){\r\n");
      out.write("\t      alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("\t      return false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar emailval = $(\"#inputEmailAddress\").val().trim() + \"@\" + $(\"#inputEmailAddress1\").val().trim();\r\n");
      out.write("\t$(\"[name=email]\").val(emailval);\r\n");
      out.write("\r\n");
      out.write("\tvar phoneval = $(\"#selectPhone\").val()+\"-\"+\t$(\"#phone1\").val().trim() +\"-\"+$(\"#phone2\").val().trim();\r\n");
      out.write("\t$(\"[name=phone]\").val(phoneval);\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(\"#inputSellerId\").on(\"keyup\",function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tre = /[~!@#$%^&*\\()\\-=+_' ']/gi; \r\n");
      out.write("\t\r\n");
      out.write("\t   var sellerId = $(this).val();\r\n");
      out.write("\t   \r\n");
      out.write("\t   if(re.test(sellerId)){\r\n");
      out.write("\t\t   $(\"#error2\").show();\r\n");
      out.write("\t   }else{\r\n");
      out.write("\t\t   $(\"#error2\").hide();\r\n");
      out.write("\t   //아이디 4글자 이상 작성했을 시 에만 중복여부 검사요청\r\n");
      out.write("\t   if(sellerId.trim().length < 6 || sellerId.trim().length > 17){\r\n");
      out.write("\t      $(\"#ok\").hide();\r\n");
      out.write("\t      $(\"#error\").hide();\r\n");
      out.write("\t      $(\"#idDuplicateCheck\").val(0);\r\n");
      out.write("\t      return;\r\n");
      out.write("\t   }\r\n");
      out.write("\t   \r\n");
      out.write("\t   //ajax요청\r\n");
      out.write("\t   $.ajax({\r\n");
      out.write("\t      url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/seller/checkIdDuplicate.do\",\r\n");
      out.write("\t      method : \"get\",\r\n");
      out.write("\t      data: {sellerId : sellerId}, //{}: 객체형태  // \"memberId=\"+memberId+\"&age=\": 직렬화된 형태도 가능\r\n");
      out.write("\t      success : function(data){\r\n");
      out.write("\t         console.log(data);\r\n");
      out.write("\t         //console.log(JSON.stringify(data));\r\n");
      out.write("\t         //console.log(JSON.parse(JSON.stringify(data)));\r\n");
      out.write("\t         \r\n");
      out.write("\t        /*  if(data === \"true\"){  --> ajax 사용할때는 text로 왔었다  */\r\n");
      out.write("\t       \t if(data.isUsable == true){  //jsonView는 객체로 뱉는중(boolean 으로 뱉고있다. jquery 가 바꿔줌)\r\n");
      out.write("\t        \t $(\"#error\").hide();\r\n");
      out.write("\t        \t $(\"#ok\").show();\r\n");
      out.write("\t        \t $(\"#idDuplicateCheck\").val(1);\t        \t\r\n");
      out.write("\t         }else{ //false\r\n");
      out.write("\t        \t $(\"#error\").show();\r\n");
      out.write("\t        \t $(\"#ok\").hide();\r\n");
      out.write("\t        \t $(\"#idDuplicateCheck\").val(0);\r\n");
      out.write("\t         }\r\n");
      out.write("\t      },\r\n");
      out.write("\t      error : function(){\r\n");
      out.write("\t         console.log(\"ajax요청 에러\");\r\n");
      out.write("\t      }\r\n");
      out.write("\t   });\r\n");
      out.write("\t   }\r\n");
      out.write("\t   \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"#inputPassword\").on(\"keyup\" , function(){\r\n");
      out.write("\tre = /[~!@#$%^&*\\()\\-=+_' ']/gi; \r\n");
      out.write("\tvar inputPassword = $(this).val();\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tif(re.test(inputPassword)){\r\n");
      out.write("\t\t$(\"#passworderror3\").show();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\"#passworderror3\").hide();\r\n");
      out.write("\t}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"#checkPassword\").on(\"keyup\" , function(){\r\n");
      out.write("\tre = /[~!@#$%^&*\\()\\-=+_' ']/gi; \r\n");
      out.write("\tvar inputPassword = $(\"#inputPassword\").val();\r\n");
      out.write("\tvar checkPassword = $(this).val();\r\n");
      out.write("\r\n");
      out.write("\tif(re.test(checkPassword)){\r\n");
      out.write("\t\t$(\"#passworderror2\").show();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\"#passworderror2\").hide();\r\n");
      out.write("\tif(inputPassword != checkPassword){\r\n");
      out.write("\t\t$(\"#passworderror\").show();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\"#passworderror\").hide();\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"#selectEmailAddress\").on(\"change\", function(){\r\n");
      out.write("\r\n");
      out.write("\tvar selectemail = $(this).val();\r\n");
      out.write("\tconsole.log(selectemail);\r\n");
      out.write("\t$(\"#inputEmailAddress1\").val(selectemail);\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write('	');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005frequestEncoding_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:requestEncoding
    org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag _jspx_th_fmt_005frequestEncoding_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag) _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag.class);
    boolean _jspx_th_fmt_005frequestEncoding_005f0_reused = false;
    try {
      _jspx_th_fmt_005frequestEncoding_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005frequestEncoding_005f0.setParent(null);
      // /WEB-INF/views/seller/sellerEnroll.jsp(7,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005frequestEncoding_005f0.setValue("UTF-8");
      int _jspx_eval_fmt_005frequestEncoding_005f0 = _jspx_th_fmt_005frequestEncoding_005f0.doStartTag();
      if (_jspx_th_fmt_005frequestEncoding_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005frequestEncoding_005f0);
      _jspx_th_fmt_005frequestEncoding_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005frequestEncoding_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005frequestEncoding_005f0_reused);
    }
    return false;
  }
}
